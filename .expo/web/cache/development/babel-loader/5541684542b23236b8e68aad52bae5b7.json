{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/stacks/TabStack/TabStack.tsx\";\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useContext, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from \"../../components/SVG/Icon/Icon\";\nimport { TabContext } from \"../../providers/TabProvider/TabProvider\";\nimport { Deals } from \"../../screens/Deals/Deals\";\nimport { HappyHour } from \"../../screens/HappyHour/HappyHour\";\nimport { Misc } from \"../../screens/Misc/Misc\";\nimport { Recreation } from \"../../screens/Recreation/Recreation\";\nimport { WhatsHappening } from \"../../screens/WhatsHappening/WhatsHappening\";\nimport HappyHourFilled from \"../../../assets/icons/happyHourFilled.svg\";\nimport WhatsHappeningFilled from \"../../../assets/icons/whatsHappeningFilled.svg\";\nimport DealsFilled from \"../../../assets/icons/dealsFilled.svg\";\nimport MiscFilled from \"../../../assets/icons/miscFilled.svg\";\nimport RecFilled from \"../../../assets/icons/recFilled.svg\";\nimport { LIGHTBLUE } from \"../../utils/constants\";\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nexport var TabStack = function TabStack() {\n  var Tab = createBottomTabNavigator();\n\n  var _useContext = useContext(TabContext),\n      currTab = _useContext.currTab,\n      setCurrTab = _useContext.setCurrTab,\n      setDrawerActive = _useContext.setDrawerActive;\n\n  var navigation = useNavigation();\n  var deals = 'Deals';\n  var happyHour = 'Happy Hour';\n  var whatsHappening = 'Whats Happening';\n  var misc = 'Misc';\n  var rec = 'Recreation';\n  var isDrawerOpen = useIsDrawerOpen();\n  useEffect(function () {\n    setDrawerActive(isDrawerOpen);\n  }, [isDrawerOpen, setDrawerActive]);\n  useEffect(function () {\n    navigation.navigate(currTab);\n  }, [currTab, navigation]);\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      style: {\n        backgroundColor: LIGHTBLUE\n      },\n      showLabel: false\n    },\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarButton: function tabBarButton(props) {\n          return React.createElement(TouchableOpacity, _extends({}, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }\n          }));\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var icon;\n\n          if (route.name === deals) {\n            icon = focused ? React.createElement(DealsFilled, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 14\n              }\n            }) : React.createElement(Icon, {\n              name: \"deals\",\n              size: 35,\n              color: color,\n              onPress: function onPress() {\n                return setCurrTab(deals);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 14\n              }\n            });\n          } else if (route.name === happyHour) {\n            icon = focused ? React.createElement(HappyHourFilled, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 14\n              }\n            }) : React.createElement(Icon, {\n              name: \"happyHour\",\n              size: 35,\n              color: color,\n              onPress: function onPress() {\n                return setCurrTab(happyHour);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 14\n              }\n            });\n          } else if (route.name === whatsHappening) {\n            icon = focused ? React.createElement(WhatsHappeningFilled, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 14\n              }\n            }) : React.createElement(Icon, {\n              name: \"whatsHappening\",\n              size: 42,\n              color: color,\n              onPress: function onPress() {\n                return setCurrTab(whatsHappening);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 14\n              }\n            });\n          } else if (route.name === misc) {\n            icon = focused ? React.createElement(MiscFilled, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 14\n              }\n            }) : React.createElement(Icon, {\n              name: \"misc\",\n              size: 35,\n              color: color,\n              onPress: function onPress() {\n                return setCurrTab(misc);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 14\n              }\n            });\n          } else if (route.name === rec) {\n            icon = focused ? React.createElement(RecFilled, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 14\n              }\n            }) : React.createElement(Icon, {\n              name: \"rec\",\n              size: 35,\n              color: color,\n              onPress: function onPress() {\n                return setCurrTab(rec);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 14\n              }\n            });\n          }\n\n          return icon;\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    name: deals,\n    component: Deals,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }), React.createElement(Tab.Screen, {\n    name: happyHour,\n    component: HappyHour,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }), React.createElement(Tab.Screen, {\n    name: rec,\n    component: Recreation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }), React.createElement(Tab.Screen, {\n    name: whatsHappening,\n    component: WhatsHappening,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }), React.createElement(Tab.Screen, {\n    name: misc,\n    component: Misc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/stacks/TabStack/TabStack.tsx"],"names":["createBottomTabNavigator","useNavigation","React","useContext","useEffect","Icon","TabContext","Deals","HappyHour","Misc","Recreation","WhatsHappening","HappyHourFilled","WhatsHappeningFilled","DealsFilled","MiscFilled","RecFilled","LIGHTBLUE","useIsDrawerOpen","TabStack","Tab","currTab","setCurrTab","setDrawerActive","navigation","deals","happyHour","whatsHappening","misc","rec","isDrawerOpen","navigate","style","backgroundColor","showLabel","route","tabBarButton","props","tabBarIcon","focused","color","size","icon","name"],"mappings":"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","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { useNavigation } from '@react-navigation/native'\nimport React, { useContext, useEffect } from 'react'\nimport { TouchableOpacity } from 'react-native'\nimport { Icon } from '../../components/SVG/Icon/Icon'\nimport { TabContext } from '../../providers/TabProvider/TabProvider'\nimport { Deals } from '../../screens/Deals/Deals'\nimport { HappyHour } from '../../screens/HappyHour/HappyHour'\nimport { Misc } from '../../screens/Misc/Misc'\nimport { Recreation } from '../../screens/Recreation/Recreation'\nimport { WhatsHappening } from '../../screens/WhatsHappening/WhatsHappening'\nimport HappyHourFilled from '../../../assets/icons/happyHourFilled.svg'\nimport WhatsHappeningFilled from '../../../assets/icons/whatsHappeningFilled.svg'\nimport DealsFilled from '../../../assets/icons/dealsFilled.svg'\nimport MiscFilled from '../../../assets/icons/miscFilled.svg'\nimport RecFilled from '../../../assets/icons/recFilled.svg'\nimport { LIGHTBLUE } from '../../utils/constants'\nimport { useIsDrawerOpen } from '@react-navigation/drawer'\n\nexport const TabStack = (): JSX.Element => {\n  const Tab = createBottomTabNavigator()\n  const {\n    currTab,\n    setCurrTab,\n    setDrawerActive,\n  } = useContext(TabContext)\n  const navigation = useNavigation()\n  const deals = 'Deals'\n  const happyHour = 'Happy Hour'\n  const whatsHappening = 'Whats Happening'\n  const misc = 'Misc'\n  const rec = 'Recreation'\n  const isDrawerOpen = useIsDrawerOpen()\n\n  useEffect(() => {\n    setDrawerActive(isDrawerOpen)\n  }, [isDrawerOpen, setDrawerActive])\n\n  useEffect(() => {\n    navigation.navigate(currTab)\n  }, [currTab, navigation])\n\n  return (\n\t\t<Tab.Navigator\n\t\t\ttabBarOptions={{\n\t\t\t  style: { backgroundColor: LIGHTBLUE },\n\t\t\t  showLabel: false,\n\t\t\t}}\n\t\t\tscreenOptions={({ route }) => ({\n\t\t\t  tabBarButton: props => <TouchableOpacity {...props} />,\n\t\t\t  tabBarIcon: ({ focused, color, size }) => {\n\t\t\t    let icon\n\t\t\t    if (route.name === deals) {\n\t\t\t      icon = focused\n\t\t\t        ? <DealsFilled/>\n\t\t\t        : <Icon name ='deals' size={35} color={color} onPress={() => (setCurrTab(deals))}/>\n\t\t\t    } else if (route.name === happyHour) {\n\t\t\t      icon = focused\n\t\t\t        ? <HappyHourFilled/>\n\t\t\t        : <Icon name ='happyHour' size={35} color={color} onPress={() => (setCurrTab(happyHour))}/>\n\t\t\t    } else if (route.name === whatsHappening) {\n\t\t\t      icon = focused\n\t\t\t        ? <WhatsHappeningFilled/>\n\t\t\t        : <Icon name ='whatsHappening' size={42} color={color} onPress={() => (setCurrTab(whatsHappening))}/>\n\t\t\t    } else if (route.name === misc) {\n\t\t\t      icon = focused\n\t\t\t        ? <MiscFilled/>\n\t\t\t        : <Icon name ='misc' size={35} color={color} onPress={() => (setCurrTab(misc))}/>\n\t\t\t    } else if (route.name === rec) {\n\t\t\t      icon = focused\n\t\t\t        ? <RecFilled/>\n\t\t\t        : <Icon name ='rec' size={35} color={color} onPress={() => (setCurrTab(rec))}/>\n\t\t\t    }\n\t\t\t    return icon\n\t\t\t  },\n\t\t\t})}\n\t\t>\n\t\t\t<Tab.Screen name={deals} component={Deals}/>\n\t\t\t<Tab.Screen name={happyHour} component={HappyHour}/>\n\t\t\t<Tab.Screen name={rec} component={Recreation}/>\n\t\t\t<Tab.Screen name={whatsHappening} component={WhatsHappening}/>\n\t\t\t<Tab.Screen name={misc} component={Misc}/>\n\t\t</Tab.Navigator>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}