{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/ForgotPassword/ConfirmPasswordChange.tsx\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Paragraph, Subheading, TextInput, Title } from 'react-native-paper';\nimport { validatePasswordReset } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { styles } from \"./styles\";\nexport var ConfirmPasswordChange = function ConfirmPasswordChange(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var _route$params = route.params,\n      data = _route$params.data,\n      code = _route$params.code;\n  var navigation = useNavigation();\n\n  var validateCode = function validateCode() {\n    if (password === confirmPassword) {\n      validatePasswordReset({\n        email: data,\n        recoveryCode: code,\n        password: password\n      }).then(function () {\n        return navigation.navigate('Login');\n      });\n    }\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginHorizontal: '8%',\n      marginTop: '24%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      marginBottom: '12%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"Create a New Password\"), React.createElement(Subheading, {\n    style: {\n      marginBottom: '12%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Enter a combination of at least six numbers, letters, and special characters\"), React.createElement(TextInput, {\n    placeholder: \"New Password\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    value: password,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(password) {\n      return setConfirmPassword(password);\n    },\n    value: confirmPassword,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: [styles.continueButton, {\n      marginTop: '12%'\n    }],\n    onPress: function onPress() {\n      return validateCode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Paragraph, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, \"Continue\"))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/ForgotPassword/ConfirmPasswordChange.tsx"],"names":["useNavigation","React","useState","Button","Paragraph","Subheading","TextInput","Title","validatePasswordReset","ScreenContainer","styles","ConfirmPasswordChange","route","password","setPassword","confirmPassword","setConfirmPassword","params","data","code","navigation","validateCode","email","recoveryCode","then","navigate","flex","marginHorizontal","marginTop","textAlign","marginBottom","textInput","continueButton","buttonText"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useState } from 'react'\nimport { View } from 'react-native'\nimport { Button, Paragraph, Subheading, TextInput, Title } from 'react-native-paper'\nimport { validatePasswordReset } from '../../api/service'\n\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { styles } from './styles'\n\nexport const ConfirmPasswordChange = ({route}): JSX.Element => {\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const { data, code, } = route.params\n\tconst navigation = useNavigation()\n  const validateCode = () => {\n\t\tif(password === confirmPassword){\n\t\t\tvalidatePasswordReset({ email: data, recoveryCode: code, password: password })\n\t\t\t\t.then(() => navigation.navigate('Login'))\n\t\t}\n  }\n  return (\n\t\t<ScreenContainer>\n\t\t\t<View style={{ flex: 1, marginHorizontal: '8%', marginTop: '24%' }}>\n\t\t\t\t<Title style={{ textAlign: 'center', marginBottom: '12%' }}>Create a New Password</Title>\n\t\t\t\t<Subheading style={{ marginBottom: '12%' }}>\n\t\t\t\t\tEnter a combination of at least six numbers, letters, and special characters\n\t\t\t\t</Subheading>\n\t\t\t\t<TextInput\n\t\t\t\t\tplaceholder=\"New Password\"\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tonChangeText={(password) => setPassword(password)}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tsecureTextEntry={true}\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t\tmode=\"outlined\"\n\t\t\t\t\tleft={<TextInput.Icon name='lock-outline'/>}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\tonChangeText={(password) => setConfirmPassword(password)}\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tsecureTextEntry={true}\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t\tmode=\"outlined\"\n\t\t\t\t\tleft={<TextInput.Icon name='lock-outline'/>}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tstyle={[styles.continueButton, { marginTop: '12%' }]}\n\t\t\t\t\tonPress={() => validateCode()}\n\t\t\t\t>\n\t\t\t\t\t<Paragraph style={styles.buttonText}>Continue</Paragraph>\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}