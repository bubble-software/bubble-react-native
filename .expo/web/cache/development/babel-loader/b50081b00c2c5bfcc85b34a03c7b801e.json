{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/WhatsHappening/WhatsHappening.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { TableCell } from \"../../components/TableCell/TableCell\";\nimport { TableView } from \"../../components/TableView/TableView\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport { getCategoryPosts, getRadius } from \"../../api/service\";\nimport * as Location from 'expo-location';\nexport var WhatsHappening = function WhatsHappening() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      whatsHappening = _useState2[0],\n      setWhatsHappening = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  useEffect(function () {\n    (function _callee() {\n      var location, coords, longitude, latitude;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              location = _context.sent;\n              coords = location.coords;\n              longitude = coords.longitude;\n              latitude = coords.latitude;\n              getRadius({\n                longitude: longitude,\n                latitude: latitude\n              }).then(function (resp) {\n                getCategoryPosts({\n                  token: credentials,\n                  longitude: longitude,\n                  latitude: latitude,\n                  radius: resp.radius,\n                  category: 'Whats Happening'\n                }).then(function (whatsHappeningData) {\n                  return setWhatsHappening(whatsHappeningData);\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [credentials]);\n\n  var route = function route(item) {\n    navigation.navigate('Post', {\n      data: item\n    });\n  };\n\n  var postTableCell = function postTableCell(_ref) {\n    var item = _ref.item;\n    return React.createElement(TableCell, {\n      item: item,\n      nav: route,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 53\n      }\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, React.createElement(TableView, {\n    data: whatsHappening,\n    tableCellRenderer: postTableCell,\n    scrollEnabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/WhatsHappening/WhatsHappening.tsx"],"names":["useNavigation","React","useEffect","useState","useContext","ScreenContainer","TableCell","TableView","AuthContext","getCategoryPosts","getRadius","Location","WhatsHappening","whatsHappening","setWhatsHappening","navigation","credentials","getCurrentPositionAsync","location","coords","longitude","latitude","then","resp","token","radius","category","whatsHappeningData","route","item","navigate","data","postTableCell"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,SAASC,eAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,SAASC,gBAAT,EAA2BC,SAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmB;AAC/C,kBAA4CT,QAAQ,EAApD;AAAA;AAAA,MAAOU,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,UAAU,GAAGf,aAAa,EAAhC;;AACA,oBAAwBI,UAAU,CAACI,WAAD,CAAlC;AAAA,MAAQQ,WAAR,eAAQA,WAAR;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBS,QAAQ,CAACM,uBAAT,CAAiC,EAAjC,CADxB;;AAAA;AACOC,cAAAA,QADP;AAGSC,cAAAA,MAHT,GAGoBD,QAHpB,CAGSC,MAHT;AAIOC,cAAAA,SAJP,GAImBD,MAAM,CAACC,SAJ1B;AAKOC,cAAAA,QALP,GAKkBF,MAAM,CAACE,QALzB;AAMCX,cAAAA,SAAS,CAAC;AAAEU,gBAAAA,SAAS,EAATA,SAAF;AAAaC,gBAAAA,QAAQ,EAARA;AAAb,eAAD,CAAT,CAAmCC,IAAnC,CAAwC,UAACC,IAAD,EAAU;AAChDd,gBAAAA,gBAAgB,CAAC;AAAEe,kBAAAA,KAAK,EAAER,WAAT;AAAsBI,kBAAAA,SAAS,EAATA,SAAtB;AAAiCC,kBAAAA,QAAQ,EAARA,QAAjC;AAA2CI,kBAAAA,MAAM,EAAEF,IAAI,CAACE,MAAxD;AAAgEC,kBAAAA,QAAQ,EAAE;AAA1E,iBAAD,CAAhB,CAAgHJ,IAAhH,CAAqH,UAACK,kBAAD;AAAA,yBAAwBb,iBAAiB,CAACa,kBAAD,CAAzC;AAAA,iBAArH;AACD,eAFD;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAUD,GAXQ,EAWN,CAACX,WAAD,CAXM,CAAT;;AAaA,MAAMY,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAgB;AAC5Bd,IAAAA,UAAU,CAACe,QAAX,CAAoB,MAApB,EAA4B;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KAA5B;AACD,GAFD;;AAGA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGH,IAAH,QAAGA,IAAH;AAAA,WAA4B,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAuB,MAAA,GAAG,EAAGD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B;AAAA,GAAtB;;AAEA,SACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAEf,cADP;AAEC,IAAA,iBAAiB,EAAEmB,aAFpB;AAGC,IAAA,aAAa,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADA;AASD,CAjCM","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useEffect, useState, useContext } from 'react'\n\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { TableCell } from '../../components/TableCell/TableCell'\nimport { TableView } from '../../components/TableView/TableView'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport { getCategoryPosts, getRadius } from '../../api/service'\nimport * as Location from 'expo-location'\nimport { Post } from '../../api/types'\n\nexport const WhatsHappening = (): JSX.Element => {\n  const [whatsHappening, setWhatsHappening] = useState()\n\n  const navigation = useNavigation()\n  const { credentials } = useContext(AuthContext)\n\n  useEffect(() => {\n    (async () => {\n      const location = await Location.getCurrentPositionAsync({})\n      // @ts-ignore\n      const { coords } = location\n      const longitude = coords.longitude\n      const latitude = coords.latitude\n      getRadius({ longitude, latitude }).then((resp) => {\n        getCategoryPosts({ token: credentials, longitude, latitude, radius: resp.radius, category: 'Whats Happening' }).then((whatsHappeningData) => setWhatsHappening(whatsHappeningData))\n      })\n    })()\n  }, [credentials])\n\n  const route = (item: Post) => {\n    navigation.navigate('Post', { data: item })\n  }\n  const postTableCell = ({ item }: {item: Post}) => <TableCell item={item} nav={ route } />\n\n  return (\n\t\t<ScreenContainer>\n\t\t\t<TableView\n\t\t\t\tdata={whatsHappening}\n\t\t\t\ttableCellRenderer={postTableCell}\n\t\t\t\tscrollEnabled={false}\n\t\t\t/>\n\t\t</ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}