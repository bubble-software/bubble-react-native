{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/Feedback/Feedback.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Title } from 'react-native-paper';\nimport { submitFeedback } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport * as Location from 'expo-location';\nimport { DARKBLUE } from \"../../utils/constants\";\nimport Cog from \"../../../assets/icons/feedbackCog.svg\";\nimport { styles } from \"./styles\";\nexport var Feedback = function Feedback() {\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  var _useState = useState({\n    longitude: undefined,\n    latitude: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      feedback = _useState4[0],\n      setFeedback = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var location, coords, longitude, latitude;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              location = _context.sent;\n              coords = location.coords;\n              longitude = coords.longitude;\n              latitude = coords.latitude;\n              setLocation({\n                longitude: longitude,\n                latitude: latitude\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var longitude = location.longitude,\n      latitude = location.latitude;\n\n  var postFeedback = function postFeedback() {\n    return longitude && latitude && submitFeedback(credentials, {\n      longitude: longitude,\n      latitude: latitude,\n      content: feedback\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Cog, {\n    width: 40,\n    height: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"Feedback\"), React.createElement(Cog, {\n    width: 40,\n    height: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  })), React.createElement(TextInput, {\n    placeholder: \"Enter comment here...\",\n    value: feedback,\n    onChangeText: function onChangeText(text) {\n      return setFeedback(text);\n    },\n    textAlign: 'left',\n    style: styles.textInput,\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    style: styles.button,\n    onPress: function onPress() {\n      return postFeedback();\n    },\n    mode: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    style: {\n      color: DARKBLUE\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"Submit\"))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/Feedback/Feedback.tsx"],"names":["React","useContext","useEffect","useState","Button","Title","submitFeedback","ScreenContainer","AuthContext","Location","DARKBLUE","Cog","styles","Feedback","credentials","longitude","undefined","latitude","location","setLocation","feedback","setFeedback","getCurrentPositionAsync","coords","postFeedback","content","alignItems","titleContainer","titleText","text","textInput","button","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;;;AAGA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,oBAA9B;AACA,SAASC,cAAT;AACA,SAASC,eAAT;AACA,SAASC,WAAT;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,SAASC,QAAT;AACA,OAAOC,GAAP;AACA,SAASC,MAAT;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAmB;AACzC,oBAAwBZ,UAAU,CAACO,WAAD,CAAlC;AAAA,MAAQM,WAAR,eAAQA,WAAR;;AAEA,kBAAgCX,QAAQ,CAAgE;AAAEY,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAAhE,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgChB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOiB,QAAP;AAAA,MAAiBC,WAAjB;;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBO,QAAQ,CAACa,uBAAT,CAAiC,EAAjC,CADxB;;AAAA;AACOJ,cAAAA,QADP;AAGSK,cAAAA,MAHT,GAGoBL,QAHpB,CAGSK,MAHT;AAIOR,cAAAA,SAJP,GAImBQ,MAAM,CAACR,SAJ1B;AAKOE,cAAAA,QALP,GAKkBM,MAAM,CAACN,QALzB;AAMCE,cAAAA,WAAW,CAAC;AAAEJ,gBAAAA,SAAS,EAATA,SAAF;AAAaE,gBAAAA,QAAQ,EAARA;AAAb,eAAD,CAAX;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQD,GATQ,EASN,EATM,CAAT;AAWA,MAAQF,SAAR,GAAgCG,QAAhC,CAAQH,SAAR;AAAA,MAAmBE,QAAnB,GAAgCC,QAAhC,CAAmBD,QAAnB;;AACA,MAAMO,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnBT,SAAS,IACTE,QADA,IAEAX,cAAc,CAACQ,WAAD,EAAe;AAAEC,MAAAA,SAAS,EAATA,SAAF;AAAaE,MAAAA,QAAQ,EAARA,QAAb;AAAuBQ,MAAAA,OAAO,EAAEL;AAAhC,KAAf,CAHK;AAAA,GAArB;;AAMA,SACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAgB,IAAA,MAAM,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGC,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAgB,IAAA,MAAM,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD,EAMC,oBAAC,SAAD;AACC,IAAA,WAAW,EAAC,uBADb;AAEC,IAAA,KAAK,EAAER,QAFR;AAGC,IAAA,YAAY,EAAE,sBAACS,IAAD;AAAA,aAAUR,WAAW,CAACQ,IAAD,CAArB;AAAA,KAHf;AAIC,IAAA,SAAS,EAAE,MAJZ;AAKC,IAAA,KAAK,EAAEjB,MAAM,CAACkB,SALf;AAMC,IAAA,SAAS,EAAE,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAcC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAElB,MAAM,CAACmB,MADf;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMP,YAAY,EAAlB;AAAA,KAFV;AAEgC,IAAA,IAAI,EAAC,WAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAEtB;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,CAdD,CADD,CADA;AA2BD,CAnDM","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nimport { View, Text, TextInput } from 'react-native'\nimport { Button, Title } from 'react-native-paper'\nimport { submitFeedback } from '../../api/service'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport * as Location from 'expo-location'\nimport { DARKBLUE } from '../../utils/constants'\nimport Cog from '../../../assets/icons/feedbackCog.svg'\nimport { styles } from './styles'\n\nexport const Feedback = (): JSX.Element => {\n  const { credentials } = useContext(AuthContext)\n\n  const [location, setLocation] = useState <{longitude: undefined | number, latitude: undefined| number}>({ longitude: undefined, latitude: null })\n  const [feedback, setFeedback] = useState('')\n\n  useEffect(() => {\n    (async () => {\n      const location = await Location.getCurrentPositionAsync({})\n      // @ts-ignore`\n      const { coords } = location\n      const longitude = coords.longitude\n      const latitude = coords.latitude\n      setLocation({ longitude, latitude })\n    })()\n  }, [])\n\n  const { longitude, latitude } = location\n  const postFeedback = () => (\n    longitude &&\n    latitude &&\n    submitFeedback(credentials!, { longitude, latitude, content: feedback })\n  )\n\n  return (\n\t\t<ScreenContainer>\n\t\t\t<View style={{ alignItems: 'center' }}>\n\t\t\t\t<View style={styles.titleContainer}>\n\t\t\t\t\t<Cog width={40} height={50}/>\n\t\t\t\t\t<Text style={styles.titleText}>Feedback</Text>\n\t\t\t\t\t<Cog width={40} height={50}/>\n\t\t\t\t</View>\n\t\t\t\t<TextInput\n\t\t\t\t\tplaceholder='Enter comment here...'\n\t\t\t\t\tvalue={feedback}\n\t\t\t\t\tonChangeText={(text) => setFeedback(text)}\n\t\t\t\t\ttextAlign={'left'}\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tonPress={() => postFeedback()} mode='contained'\n\t\t\t\t>\n\t\t\t\t\t<Title style={{ color: DARKBLUE }}>\n            Submit\n\t\t\t\t\t</Title>\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}