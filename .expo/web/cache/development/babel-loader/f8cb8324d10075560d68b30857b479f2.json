{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/bubble-react-native/src/screens/Misc/Misc.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { TableCell } from \"../../components/TableCell/TableCell\";\nimport { TableView } from \"../../components/TableView/TableView\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport { getCategoryPosts, getRadius } from \"../../api/service\";\nimport * as Location from 'expo-location';\nexport var Misc = function Misc() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      misc = _useState2[0],\n      setMisc = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  useEffect(function () {\n    (function _callee() {\n      var location, coords, longitude, latitude;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              location = _context.sent;\n              coords = location.coords;\n              longitude = coords.longitude;\n              latitude = coords.latitude;\n              getRadius({\n                longitude: longitude,\n                latitude: latitude\n              }).then(function (resp) {\n                getCategoryPosts({\n                  token: credentials,\n                  longitude: longitude,\n                  latitude: latitude,\n                  radius: resp.radius,\n                  category: 'Misc'\n                }).then(function (miscData) {\n                  return setMisc(miscData);\n                });\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var route = function route(item) {\n    return navigation.navigate(\"Post\", {\n      data: item\n    });\n  };\n\n  var postTableCell = function postTableCell(_ref) {\n    var item = _ref.item;\n    return React.createElement(TableCell, {\n      item: item,\n      nav: route,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 44\n      }\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(TableView, {\n    data: misc,\n    tableCellRenderer: postTableCell,\n    scrollEnabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/Misc/Misc.tsx"],"names":["useNavigation","React","useEffect","useState","useContext","ScreenContainer","TableCell","TableView","AuthContext","getCategoryPosts","getRadius","Location","Misc","misc","setMisc","navigation","credentials","getCurrentPositionAsync","location","coords","longitude","latitude","then","resp","token","radius","category","miscData","route","item","navigate","data","postTableCell"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,SAASC,gBAAT,EAA2BC,SAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAExB,kBAAwBT,QAAQ,EAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,UAAU,GAAGf,aAAa,EAAhC;;AACA,oBAAwBI,UAAU,CAACI,WAAD,CAAlC;AAAA,MAAQQ,WAAR,eAAQA,WAAR;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACd,KAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBS,QAAQ,CAACM,uBAAT,CAAiC,EAAjC,CADrB;;AAAA;AACIC,cAAAA,QADJ;AAGQC,cAAAA,MAHR,GAGmBD,QAHnB,CAGQC,MAHR;AAIMC,cAAAA,SAJN,GAIkBD,MAAM,CAACC,SAJzB;AAKMC,cAAAA,QALN,GAKiBF,MAAM,CAACE,QALxB;AAMAX,cAAAA,SAAS,CAAC;AAACU,gBAAAA,SAAS,EAATA,SAAD;AAAYC,gBAAAA,QAAQ,EAARA;AAAZ,eAAD,CAAT,CAAiCC,IAAjC,CAAsC,UAACC,IAAD,EAAU;AAC9Cd,gBAAAA,gBAAgB,CAAC;AAACe,kBAAAA,KAAK,EAAER,WAAR;AAAqBI,kBAAAA,SAAS,EAATA,SAArB;AAAgCC,kBAAAA,QAAQ,EAARA,QAAhC;AAA0CI,kBAAAA,MAAM,EAAEF,IAAI,CAACE,MAAvD;AAA+DC,kBAAAA,QAAQ,EAAC;AAAxE,iBAAD,CAAhB,CAAmGJ,IAAnG,CAAwG,UAACK,QAAD;AAAA,yBAAcb,OAAO,CAACa,QAAD,CAArB;AAAA,iBAAxG;AACD,eAFD;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,WAAed,UAAU,CAACe,QAAX,CAAoB,MAApB,EAA4B;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KAA5B,CAAf;AAAA,GAAd;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGH,IAAH,QAAGA,IAAH;AAAA,WAAmB,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAuB,MAAA,GAAG,EAAGD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAAA,GAAtB;;AAEA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEf,IADR;AAEE,IAAA,iBAAiB,EAAEmB,aAFrB;AAGE,IAAA,aAAa,EAAE,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAhCM","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useEffect, useState } from 'react'\nimport { useContext } from 'react'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { TableCell } from '../../components/TableCell/TableCell'\nimport { TableView } from '../../components/TableView/TableView'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport { getCategoryPosts, getRadius } from '../../api/service'\nimport * as Location from 'expo-location';\n\nexport const Misc = () => {\n\n  const [misc, setMisc] = useState();\n\n  const navigation = useNavigation()\n  const { credentials } = useContext(AuthContext)\n\n  useEffect(() => {\n    ( async () => {\n      let location = await Location.getCurrentPositionAsync({});\n      //@ts-ignore\n      const { coords } = location\n      const longitude = coords.longitude\n      const latitude = coords.latitude\n      getRadius({longitude, latitude}).then((resp) => {\n        getCategoryPosts({token: credentials, longitude, latitude, radius: resp.radius, category:'Misc' }).then((miscData) => setMisc(miscData))\n      })\n    })();\n  }, []); \n\n  const route = (item: any) => navigation.navigate(\"Post\", { data: item })\n  const postTableCell = ({ item }: any) => <TableCell item={item} nav={ route } />\n\n  return (\n    <ScreenContainer>\n      <TableView \n        data={misc} \n        tableCellRenderer={postTableCell}\n        scrollEnabled={false}\n      />\n    </ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}