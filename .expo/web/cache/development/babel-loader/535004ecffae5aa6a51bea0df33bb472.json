{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/bubble-react-native/src/screens/Feedback/Feedback.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect } from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Title } from 'react-native-paper';\nimport { submitFeedback } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport * as Location from 'expo-location';\nimport { DARKBLUE, LIGHTERBLUE } from \"../../utils/constants\";\nimport Cog from \"../../../assets/icons/feedbackCog.svg\";\nexport var Feedback = function Feedback() {\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  var _useState = useState({\n    longitude: undefined,\n    latitude: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      feedback = _useState4[0],\n      setFeedback = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var location, coords, longitude, latitude;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              location = _context.sent;\n              coords = location.coords;\n              longitude = coords.longitude;\n              latitude = coords.latitude;\n              setLocation({\n                longitude: longitude,\n                latitude: latitude\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var longitude = location.longitude,\n      latitude = location.latitude;\n\n  var postFeedback = function postFeedback() {\n    return longitude && latitude && submitFeedback(credentials, {\n      longitude: longitude,\n      latitude: latitude,\n      content: feedback\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginVertical: 12,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Cog, {\n    width: 40,\n    height: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      fontSize: 36,\n      color: 'white',\n      fontWeight: '600',\n      marginHorizontal: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Feedback\"), React.createElement(Cog, {\n    width: 40,\n    height: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    placeholder: \"Enter comment here...\",\n    value: feedback,\n    onChangeText: function onChangeText(text) {\n      return setFeedback(text);\n    },\n    textAlign: 'left',\n    style: {\n      marginTop: 20,\n      minHeight: 100,\n      backgroundColor: 'white',\n      borderColor: DARKBLUE,\n      borderRadius: 20,\n      borderWidth: 2,\n      width: '85%',\n      alignSelf: 'center',\n      padding: 20,\n      paddingTop: 20\n    },\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: {\n      marginVertical: 12,\n      paddingHorizontal: 10,\n      backgroundColor: LIGHTERBLUE,\n      borderWidth: 2,\n      borderColor: DARKBLUE\n    },\n    onPress: function onPress() {\n      return postFeedback();\n    },\n    mode: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    style: {\n      color: DARKBLUE\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/Feedback/Feedback.tsx"],"names":["React","useContext","useEffect","useState","Button","Title","submitFeedback","ScreenContainer","AuthContext","Location","DARKBLUE","LIGHTERBLUE","Cog","Feedback","credentials","longitude","undefined","latitude","location","setLocation","feedback","setFeedback","getCurrentPositionAsync","coords","postFeedback","content","alignItems","flexDirection","marginVertical","textAlign","fontSize","color","fontWeight","marginHorizontal","text","marginTop","minHeight","backgroundColor","borderColor","borderRadius","borderWidth","width","alignSelf","padding","paddingTop","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useState } from 'react'\nimport { View, Text, TextInput } from 'react-native'\nimport { Button, Title } from 'react-native-paper'\nimport { getCategoryPosts, getRadius, submitFeedback } from '../../api/service'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport * as Location from 'expo-location';\nimport { DARKBLUE, LIGHTBLUE, LIGHTERBLUE } from '../../utils/constants'\nimport Cog from '../../../assets/icons/feedbackCog.svg'\n\nexport const Feedback = () => {\n\n  const {credentials} = useContext(AuthContext)\n\n  const [location, setLocation] = useState <{longitude: undefined | number, latitude: undefined| number}>({longitude: undefined, latitude: null })\n  const [feedback, setFeedback] = useState('')\n\n  useEffect(() => {\n    ( async () => {\n      let location = await Location.getCurrentPositionAsync({});\n      //@ts-ignore`\n      const { coords } = location\n      const longitude = coords.longitude\n      const latitude = coords.latitude\n      setLocation({longitude, latitude})\n    })();\n  }, []); \n  const {longitude, latitude} = location\n  const postFeedback = () => (\n    longitude \n    && latitude \n    && submitFeedback(credentials!, {longitude, latitude, content: feedback})\n  )\n  return (\n    <ScreenContainer>\n      <View style={{alignItems:'center', }}>\n        <View style={{flexDirection:'row', marginVertical:12, alignItems:'center'}}>\n          <Cog width={40} height={50}/>\n          <Text style={{textAlign:'center', fontSize: 36, color: 'white', fontWeight:'600', marginHorizontal: 20}}>Feedback</Text>\n          <Cog width={40} height={50}/>\n        </View>\n        <TextInput\n            placeholder='Enter comment here...'\n            value={feedback}\n            onChangeText={(text) => setFeedback(text)}\n            textAlign={'left'}\n            style={{\n                marginTop: 20,\n                minHeight:100,\n                backgroundColor: 'white',\n                borderColor:DARKBLUE,\n                borderRadius: 20,\n                borderWidth: 2,\n                width: '85%', \n                alignSelf:'center',\n                padding:20,\n                paddingTop:20\n            }}\n            multiline={true}\n        />\n        <Button style={{ marginVertical: 12, paddingHorizontal: 10, backgroundColor: LIGHTERBLUE, borderWidth: 2, borderColor: DARKBLUE }} onPress={() => postFeedback()} mode='contained'>\n          <Title style={{color: DARKBLUE}}>\n            Submit\n          </Title>\n        </Button>\n      </View>\n    </ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}