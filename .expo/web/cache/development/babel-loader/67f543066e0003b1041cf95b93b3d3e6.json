{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/bubble-react-native/src/screens/ForgotPassword/ConfirmPasswordChange.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Paragraph, Subheading, TextInput, Title } from 'react-native-paper';\nimport { validatePasswordReset } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { styles } from \"./styles\";\nexport var ConfirmPasswordChange = function ConfirmPasswordChange() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var email = 'sss';\n\n  var validateCode = function validateCode() {\n    validatePasswordReset({\n      email: email,\n      recoveryCode: 'dd',\n      password: 'dd'\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginHorizontal: '8%',\n      marginTop: '24%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      marginBottom: '12%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Create a New Password\"), React.createElement(Subheading, {\n    style: {\n      marginBottom: '12%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Enter a combination of at least six numbers, letters, and special characters\"), React.createElement(TextInput, {\n    placeholder: \"New Password\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    value: password,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(password) {\n      return setConfirmPassword(password);\n    },\n    value: confirmPassword,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: [styles.continueButton, {\n      marginTop: '12%'\n    }],\n    onPress: function onPress() {\n      return validateCode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Paragraph, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Continue\"))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/ForgotPassword/ConfirmPasswordChange.tsx"],"names":["React","useState","Button","Paragraph","Subheading","TextInput","Title","validatePasswordReset","ScreenContainer","styles","ConfirmPasswordChange","password","setPassword","confirmPassword","setConfirmPassword","email","validateCode","recoveryCode","flex","marginHorizontal","marginTop","textAlign","marginBottom","continueButton","buttonText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View } from 'react-native'\nimport { Button, Paragraph, Subheading, TextInput, Title } from 'react-native-paper'\nimport { validatePasswordReset } from '../../api/service'\n\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { styles } from './styles'\n\n\nexport const ConfirmPasswordChange = () => {\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const email = 'sss'\n  const validateCode = () => {\n    validatePasswordReset({email, recoveryCode:'dd', password:'dd'})\n  }\n  return (\n    <ScreenContainer>\n      <View style={{ flex: 1, marginHorizontal: '8%', marginTop: '24%'}}>\n        <Title style={{textAlign:'center', marginBottom: '12%'}}>Create a New Password</Title>\n        <Subheading style={{marginBottom: '12%'}}>Enter a combination of at least six numbers, letters, and special characters</Subheading>\n        <TextInput\n            placeholder=\"New Password\"\n            onChangeText={(password) => setPassword(password)}\n            value={password}\n            secureTextEntry={true}\n            autoCapitalize='none'\n            mode=\"outlined\"\n            left={<TextInput.Icon name='lock-outline'/>}\n          />\n        <TextInput\n            placeholder=\"Confirm Password\"\n            onChangeText={(password) => setConfirmPassword(password)}\n            value={confirmPassword}\n            secureTextEntry={true}\n            autoCapitalize='none'\n            mode=\"outlined\"\n            left={<TextInput.Icon name='lock-outline'/>}\n          />\n        <Button\n          mode=\"contained\"\n          style={[styles.continueButton, {marginTop: '12%'}]}\n          onPress={() => validateCode()}\n        >\n          <Paragraph style={styles.buttonText}>Continue</Paragraph>\n        </Button>\n      </View>\n    </ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}