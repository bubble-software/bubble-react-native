{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { LOGIN_URL } from \"../../utils/constants\";\nexport var login = function login(loginInfo) {\n  var response;\n  return _regeneratorRuntime.async(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios({\n            method: 'post',\n            url: LOGIN_URL,\n            data: loginInfo\n          }).catch(function (e) {\n            throw new Error(e.response.data.errors);\n          }));\n\n        case 2:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", response.data[0].token);\n\n        case 7:\n          if (!(response.status === 401)) {\n            _context.next = 9;\n            break;\n          }\n\n          return _context.abrupt(\"return\", undefined);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/Login/service.ts"],"names":["axios","LOGIN_URL","login","loginInfo","method","url","data","catch","e","Error","response","errors","status","token","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIH,KAAK,CAAC;AAC3BI,YAAAA,MAAM,EAAE,MADmB;AAE3BC,YAAAA,GAAG,EAAEJ,SAFsB;AAG3BK,YAAAA,IAAI,EAAEH;AAHqB,WAAD,CAAL,CAIpBI,KAJoB,CAId,UAACC,CAAD,EAAO;AACd,kBAAM,IAAIC,KAAJ,CAAUD,CAAC,CAACE,QAAF,CAAWJ,IAAX,CAAgBK,MAA1B,CAAN;AACD,WANsB,CADJ;;AAAA;AACbD,UAAAA,QADa;;AAAA,gBAQfA,QAAQ,CAACE,MAAT,KAAoB,GARL;AAAA;AAAA;AAAA;;AAAA,2CASVF,QAAQ,CAACJ,IAAT,CAAc,CAAd,EAAiBO,KATP;;AAAA;AAAA,gBAURH,QAAQ,CAACE,MAAT,KAAoB,GAVZ;AAAA;AAAA;AAAA;;AAAA,2CAWVE,SAXU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import axios from 'axios'\nimport { Credentials } from '../../providers/AuthProvider/types'\nimport { LOGIN_URL } from '../../utils/constants'\nimport { LoginInfo } from './types'\n\nexport const login = async (loginInfo: LoginInfo): Promise<Credentials | undefined> => {\n  const response = await axios({\n    method: 'post',\n    url: LOGIN_URL,\n    data: loginInfo,\n  }).catch((e) => {\n    throw new Error(e.response.data.errors)\n  })\n  if (response.status === 200) {\n    return response.data[0].token\n  } else if (response.status === 401) {\n    return undefined\n  }\n}\n"]},"metadata":{},"sourceType":"module"}