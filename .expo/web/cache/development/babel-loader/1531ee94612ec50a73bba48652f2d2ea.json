{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/bubble-react-native/src/screens/Account/Account.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect } from 'react';\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { TableView } from \"../../components/TableView/TableView\";\nimport { getUserPosts } from \"../../api/service\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport { useState } from 'react';\nimport { TableCell } from \"../../components/TableCell/TableCell\";\nimport { Title } from 'react-native-paper';\nimport { DARKBLUE } from \"../../utils/constants\";\nimport { UserContext } from \"../../providers/UserProvider/UserProvider\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport var Account = function Account() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  var _useContext2 = useContext(UserContext),\n      me = _useContext2.me;\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getUserPosts(credentials).then(function (userPostData) {\n                setUserPosts(userPostData);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var postTableCell = function postTableCell(_ref) {\n    var item = _ref.item;\n    return React.createElement(TableCell, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 44\n      }\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      color: 'white',\n      fontSize: 36,\n      marginTop: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, me == null ? void 0 : me.username), React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      color: DARKBLUE,\n      marginTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, userPosts.length, \" Bubbles\"), React.createElement(TableView, {\n    data: userPosts,\n    tableCellRenderer: postTableCell,\n    scrollEnabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/Account/Account.tsx"],"names":["React","useContext","useEffect","ScreenContainer","TableView","getUserPosts","AuthContext","useState","TableCell","Title","DARKBLUE","UserContext","Account","userPosts","setUserPosts","credentials","me","then","userPostData","postTableCell","item","textAlign","color","fontSize","marginTop","username","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,eAAT;AACA,SAASC,SAAT;AAEA,SAAoBC,YAApB;AACA,SAASC,WAAT;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT;AAEA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,QAAT;AACA,SAASC,WAAT;;AAGA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAE3B,kBAAkCL,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAwBb,UAAU,CAACK,WAAD,CAAlC;AAAA,MAAQS,WAAR,eAAQA,WAAR;;AACA,qBAAed,UAAU,CAACU,WAAD,CAAzB;AAAA,MAAQK,EAAR,gBAAQA,EAAR;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACd,KAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQG,YAAY,CAACU,WAAD,CAAZ,CAA0BE,IAA1B,CAA+B,UAACC,YAAD,EAAkB;AACrDJ,gBAAAA,YAAY,CAACI,YAAD,CAAZ;AACD,eAFK,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAmB,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAAA,GAAtB;;AACA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAC,QADL;AAELC,MAAAA,KAAK,EAAC,OAFD;AAGLC,MAAAA,QAAQ,EAAE,EAHL;AAILC,MAAAA,SAAS,EAAE;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGR,EARH,oBAQGA,EAAE,CAAES,QARP,CADF,EAWE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,SAAS,EAAC,QADL;AAELC,MAAAA,KAAK,EAACZ,QAFD;AAGLc,MAAAA,SAAS,EAAE;AAHN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGX,SAAS,CAACa,MAPb,aAXF,EAoBE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEb,SADR;AAEE,IAAA,iBAAiB,EAAEM,aAFrB;AAGE,IAAA,aAAa,EAAE,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AA4BD,CA3CM","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { TableView } from '../../components/TableView/TableView'\nimport * as Location from 'expo-location';\nimport { getRadius, getUserPosts } from '../../api/service';\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider';\nimport { useState } from 'react';\nimport { TableCell } from '../../components/TableCell/TableCell';\nimport { useNavigation } from '@react-navigation/native';\nimport { Title } from 'react-native-paper';\nimport { DARKBLUE } from '../../utils/constants';\nimport { UserContext } from '../../providers/UserProvider/UserProvider';\nimport { Text } from 'react-native'\n\nexport const Account = () => {\n\n  const [userPosts, setUserPosts] = useState([])\n  const { credentials } = useContext(AuthContext)\n  const { me } = useContext(UserContext)\n\n  useEffect(() => {\n    ( async () => {\n        await getUserPosts(credentials).then((userPostData) => {\n          setUserPosts(userPostData)\n        })\n    })()\n  }, [])\n  \n  const postTableCell = ({ item }: any) => <TableCell item={item} />\n  return (\n    <ScreenContainer>\n      <Text \n        style={{\n          textAlign:'center',\n          color:'white',\n          fontSize: 36,\n          marginTop: 24\n        }}\n      >\n        {me?.username}\n      </Text>\n      <Title \n        style={{\n          textAlign:'center',\n          color:DARKBLUE,\n          marginTop: 12\n        }}\n      >\n        {userPosts.length} Bubbles\n      </Title>\n      <TableView \n        data={userPosts} \n        tableCellRenderer={postTableCell}\n        scrollEnabled={false}\n      />\n    </ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}