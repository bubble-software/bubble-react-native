{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/Post/Post.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card, Title, Paragraph, Menu, Divider } from 'react-native-paper';\nimport { blockUser, getComments, postComment } from \"../../api/service\";\nimport { Vote } from \"../../components/Vote/Vote\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport { prettyCurrentDatePlusYears } from \"../../utils/stringhelpers\";\nimport { MaterialCommunityIcons, FontAwesome5, FontAwesome } from '@expo/vector-icons';\nimport { CommentCell } from \"../../components/CommentCell/CommentCell\";\nimport { LIGHTBLUE, TABBARCOLOR } from \"../../utils/constants\";\nimport { useNavigation } from '@react-navigation/native';\nimport { styles } from \"./styles\";\nexport var Post = function Post(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      postMenuvisible = _useState2[0],\n      setPostMenuVisible = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comments = _useState4[0],\n      setComments = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var openPostMenu = function openPostMenu() {\n    return setPostMenuVisible(true);\n  };\n\n  var closePostMenu = function closePostMenu() {\n    return setPostMenuVisible(false);\n  };\n\n  var routeData = route.params.data;\n  var title = routeData.title,\n      username = routeData.username,\n      dateCreated = routeData.dateCreated,\n      votes = routeData.votes,\n      content = routeData.content,\n      id = routeData.id,\n      userId = routeData.userId;\n  useEffect(function () {\n    getComments({\n      token: credentials,\n      postId: id.toString()\n    }).then(function (commentData) {\n      setComments(commentData);\n    });\n  }, [credentials, id]);\n\n  var blockUserAction = function blockUserAction() {\n    return _regeneratorRuntime.async(function blockUserAction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(blockUser(credentials, userId));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var postMenu = React.createElement(Menu, {\n    style: styles.menu,\n    visible: postMenuvisible,\n    onDismiss: function onDismiss() {\n      return setPostMenuVisible(!postMenuvisible);\n    },\n    anchor: React.createElement(FontAwesome5, {\n      name: \"ellipsis-h\",\n      size: 20,\n      color: TABBARCOLOR,\n      onPress: openPostMenu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 2\n    }\n  }, React.createElement(Menu.Item, {\n    onPress: function onPress() {\n      closePostMenu();\n      setTimeout(function () {\n        navigation.navigate('Report', {\n          data: {\n            type: 'post',\n            id: id\n          }\n        });\n      }, 50);\n    },\n    title: React.createElement(Text, {\n      style: {\n        color: 'black',\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }\n    }, \"Report User\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }), React.createElement(Menu.Item, {\n    onPress: function onPress() {\n      return blockUserAction().then(function () {\n        closePostMenu();\n        setTimeout(function () {\n          navigation.goBack();\n        }, 50);\n      });\n    },\n    title: React.createElement(Text, {\n      style: {\n        color: 'black',\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, \"Block User\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }\n  }));\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(CommentCell, {\n      comment: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var postCommentAction = function postCommentAction() {\n    postComment({\n      token: credentials,\n      content: text,\n      postId: id.toString()\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 1\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 1\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 1\n    }\n  }, React.createElement(Card, {\n    style: styles.cardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }\n  }, React.createElement(Card.Content, {\n    style: styles.cardContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }\n  }, React.createElement(Title, {\n    style: styles.cardTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }\n  }, title), React.createElement(View, {\n    style: styles.cardBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }\n  }, React.createElement(Paragraph, {\n    numberOfLines: 3,\n    style: styles.postText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }\n  }, content), React.createElement(Vote, {\n    votes: votes,\n    postId: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }\n  })))), React.createElement(View, {\n    style: styles.metadataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 1\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }\n  }, React.createElement(Paragraph, {\n    style: {\n      color: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }\n  }, username, \" - \"), React.createElement(Paragraph, {\n    style: {\n      color: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }\n  }, prettyCurrentDatePlusYears(dateCreated))), React.createElement(View, {\n    style: styles.metadataRight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"comment-text-outline\",\n    size: 20,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 1\n    }\n  }), React.createElement(Paragraph, {\n    style: {\n      color: 'black',\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 1\n    }\n  }, comments ? comments.length : 0), postMenu)), React.createElement(Divider, {\n    style: {\n      marginVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 1\n    }\n  }), React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 1\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      backgroundColor: LIGHTBLUE\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter comment here...\",\n    value: text,\n    onChangeText: function onChangeText(comment) {\n      return setText(comment);\n    },\n    textAlign: 'left',\n    style: styles.textInput,\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 1\n    }\n  }), React.createElement(FontAwesome, {\n    name: \"paper-plane\",\n    size: 24,\n    color: TABBARCOLOR,\n    style: styles.planeIcon,\n    onPress: function onPress() {\n      return postCommentAction();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 1\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/Post/Post.tsx"],"names":["React","useContext","useEffect","useState","Card","Title","Paragraph","Menu","Divider","blockUser","getComments","postComment","Vote","AuthContext","prettyCurrentDatePlusYears","MaterialCommunityIcons","FontAwesome5","FontAwesome","CommentCell","LIGHTBLUE","TABBARCOLOR","useNavigation","styles","Post","route","credentials","navigation","postMenuvisible","setPostMenuVisible","comments","setComments","text","setText","openPostMenu","closePostMenu","routeData","params","data","title","username","dateCreated","votes","content","id","userId","token","postId","toString","then","commentData","blockUserAction","postMenu","menu","setTimeout","navigate","type","color","fontSize","goBack","renderItem","item","postCommentAction","flex","container","cardContainer","cardContent","cardTitle","cardBody","postText","metadataContainer","flexDirection","metadataRight","marginHorizontal","length","marginVertical","justifyContent","alignItems","backgroundColor","comment","textInput","planeIcon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;;;;;;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,IAAjC,EAAuCC,OAAvC,QAAsD,oBAAtD;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC;AACA,SAASC,IAAT;AACA,SAASC,WAAT;AACA,SAASC,0BAAT;AACA,SAASC,sBAAT,EAAiCC,YAAjC,EAA+CC,WAA/C,QAAkE,oBAAlE;AACA,SAASC,WAAT;AACA,SAASC,SAAT,EAAoBC,WAApB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT;AAGA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;;AACvE,oBAAwBvB,UAAU,CAACY,WAAD,CAAlC;AAAA,MAAQY,WAAR,eAAQA,WAAR;;AAEA,MAAMC,UAAU,GAAGL,aAAa,EAAhC;;AACA,kBAA8ClB,QAAQ,CAAC,KAAD,CAAtD;AAAA;AAAA,MAAOwB,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAAgCzB,QAAQ,EAAxC;AAAA;AAAA,MAAO0B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwB3B,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAO4B,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAML,kBAAkB,CAAC,IAAD,CAAxB;AAAA,GAArB;;AACA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMN,kBAAkB,CAAC,KAAD,CAAxB;AAAA,GAAtB;;AAEA,MAAcO,SAAd,GAA4BX,KAAK,CAACY,MAAlC,CAAQC,IAAR;AACA,MAAQC,KAAR,GAAqEH,SAArE,CAAQG,KAAR;AAAA,MAAeC,QAAf,GAAqEJ,SAArE,CAAeI,QAAf;AAAA,MAAyBC,WAAzB,GAAqEL,SAArE,CAAyBK,WAAzB;AAAA,MAAsCC,KAAtC,GAAqEN,SAArE,CAAsCM,KAAtC;AAAA,MAA6CC,OAA7C,GAAqEP,SAArE,CAA6CO,OAA7C;AAAA,MAAsDC,EAAtD,GAAqER,SAArE,CAAsDQ,EAAtD;AAAA,MAA0DC,MAA1D,GAAqET,SAArE,CAA0DS,MAA1D;AAEA1C,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,WAAW,CAAC;AAAEmC,MAAAA,KAAK,EAAEpB,WAAT;AAAsBqB,MAAAA,MAAM,EAAEH,EAAE,CAACI,QAAH;AAA9B,KAAD,CAAX,CAA2DC,IAA3D,CAAgE,UAACC,WAAD,EAAiB;AAC/EnB,MAAAA,WAAW,CAACmB,WAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACxB,WAAD,EAAckB,EAAd,CAJM,CAAT;;AAMA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAChBzC,SAAS,CAACgB,WAAD,EAAemB,MAAf,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAIA,MAAMO,QAAQ,GACf,oBAAC,IAAD;AACA,IAAA,KAAK,EAAE7B,MAAM,CAAC8B,IADd;AAEA,IAAA,OAAO,EAAEzB,eAFT;AAGA,IAAA,SAAS,EAAE;AAAA,aAAMC,kBAAkB,CAAC,CAACD,eAAF,CAAxB;AAAA,KAHX;AAIA,IAAA,MAAM,EACL,oBAAC,YAAD;AACA,MAAA,IAAI,EAAC,YADL;AAEA,MAAA,IAAI,EAAE,EAFN;AAGA,MAAA,KAAK,EAAEP,WAHP;AAIA,MAAA,OAAO,EAAEa,YAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaD,oBAAC,IAAD,CAAM,IAAN;AACA,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,aAAa;AACbmB,MAAAA,UAAU,CAAC,YAAM;AACf3B,QAAAA,UAAU,CAAC4B,QAAX,CAAoB,QAApB,EAA8B;AAAEjB,UAAAA,IAAI,EAAE;AAAEkB,YAAAA,IAAI,EAAE,MAAR;AAAgBZ,YAAAA,EAAE,EAAFA;AAAhB;AAAR,SAA9B;AACD,OAFS,EAEP,EAFO,CAAV;AAGD,KAND;AAOA,IAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbC,EAsBD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBC,EAuBD,oBAAC,IAAD,CAAM,IAAN;AACA,IAAA,OAAO,EAAE;AAAA,aACPP,eAAe,GACZF,IADH,CACQ,YAAM;AACVd,QAAAA,aAAa;AACbmB,QAAAA,UAAU,CAAC,YAAM;AACf3B,UAAAA,UAAU,CAACgC,MAAX;AACD,SAFS,EAEP,EAFO,CAAV;AAGD,OANH,CADO;AAAA,KADT;AAUA,IAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBC,CADC;;AAsCA,MAAME,UAAU,GAAG,SAAbA,UAAa,QAA+B;AAAA,QAA5BC,IAA4B,SAA5BA,IAA4B;AAChD,WAAO,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD;;AAgBA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BlD,IAAAA,WAAW,CAAC;AAAEkC,MAAAA,KAAK,EAAEpB,WAAT;AAAuBiB,MAAAA,OAAO,EAAEX,IAAhC;AAAsCe,MAAAA,MAAM,EAAEH,EAAE,CAACI,QAAH;AAA9C,KAAD,CAAX;AACD,GAFD;;AAIA,SACF,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAE;AAAEe,MAAAA,IAAI,EAAE;AAAR,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExC,MAAM,CAACyC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzC,MAAM,CAAC0C,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAE1C,MAAM,CAAC2C,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE3C,MAAM,CAAC4C,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC5B,KAAlC,CADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAAC6C,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAE,CAA1B;AAA6B,IAAA,KAAK,EAAE7C,MAAM,CAAC8C,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsD1B,OAAtD,CADA,EAEA,oBAAC,IAAD;AACA,IAAA,KAAK,EAAED,KADP;AAEA,IAAA,MAAM,EAAEE,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAFA,CADA,CADA,EAaA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAAC+C,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEd,MAAAA,KAAK,EAAE;AAAT,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCjB,QAAvC,QADA,EAEA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE;AAAT,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC1C,0BAA0B,CAAC0B,WAAD,CAAjE,CAFA,CADA,EAKA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACiD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,sBAA7B;AAAoD,IAAA,IAAI,EAAE,EAA1D;AAA8D,IAAA,KAAK,EAAC,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAE,OAAT;AAAkBgB,MAAAA,gBAAgB,EAAE;AAApC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC3C,QAAQ,GACLA,QAAQ,CAAC4C,MADJ,GAEL,CAHJ,CAFA,EAQCtB,QARD,CALA,CAbA,EA6BA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEuB,MAAAA,cAAc,EAAE;AAAlB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BA,EA8BA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE7C,QAAhB;AAA0B,IAAA,UAAU,EAAE8B,UAAtC;AAAkD,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACjB,EAAf;AAAA,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BA,EA+BA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2B,MAAAA,aAAa,EAAE,KAAjB;AAAwBK,MAAAA,cAAc,EAAE,eAAxC;AAAyDC,MAAAA,UAAU,EAAE,QAArE;AAA+EC,MAAAA,eAAe,EAAE1D;AAAhG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACA,IAAA,WAAW,EAAC,uBADZ;AAEA,IAAA,KAAK,EAAEY,IAFP;AAGA,IAAA,YAAY,EAAE,sBAAA+C,OAAO;AAAA,aAAI9C,OAAO,CAAC8C,OAAD,CAAX;AAAA,KAHrB;AAIA,IAAA,SAAS,EAAE,MAJX;AAKA,IAAA,KAAK,EAAExD,MAAM,CAACyD,SALd;AAMA,IAAA,SAAS,EAAE,IANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EASA,oBAAC,WAAD;AACA,IAAA,IAAI,EAAC,aADL;AAEA,IAAA,IAAI,EAAE,EAFN;AAGA,IAAA,KAAK,EAAE3D,WAHP;AAIA,IAAA,KAAK,EAAEE,MAAM,CAAC0D,SAJd;AAKA,IAAA,OAAO,EAAE;AAAA,aAAMnB,iBAAiB,EAAvB;AAAA,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,CA/BA,CADA,CADA,CADE;AAuDD,CAzIM","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { FlatList, KeyboardAvoidingView, SafeAreaView, TextInput, View, Text } from 'react-native'\nimport { Card, Title, Paragraph, Menu, Divider } from 'react-native-paper'\nimport { blockUser, getComments, postComment } from '../../api/service'\nimport { Vote } from '../../components/Vote/Vote'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport { prettyCurrentDatePlusYears } from '../../utils/stringhelpers'\nimport { MaterialCommunityIcons, FontAwesome5, FontAwesome } from '@expo/vector-icons'\nimport { CommentCell } from '../../components/CommentCell/CommentCell'\nimport { LIGHTBLUE, TABBARCOLOR } from '../../utils/constants'\nimport { useNavigation } from '@react-navigation/native'\nimport { styles } from './styles'\nimport { PostRouteProps } from './types'\n\nexport const Post = ({ route }: {route: PostRouteProps}): JSX.Element => {\n  const { credentials } = useContext(AuthContext)\n\n  const navigation = useNavigation()\n  const [postMenuvisible, setPostMenuVisible] = useState(false)\n  const [comments, setComments] = useState()\n  const [text, setText] = useState('')\n\n  const openPostMenu = () => setPostMenuVisible(true)\n  const closePostMenu = () => setPostMenuVisible(false)\n\n  const { data: routeData } = route.params\n  const { title, username, dateCreated, votes, content, id, userId } = routeData\n\n  useEffect(() => {\n    getComments({ token: credentials, postId: id.toString() }).then((commentData) => {\n      setComments(commentData)\n    })\n  }, [credentials, id])\n\n  const blockUserAction = async () => {\n    await blockUser(credentials!, userId)\n  }\n\n  const postMenu =\n\t<Menu\n\tstyle={styles.menu}\n\tvisible={postMenuvisible}\n\tonDismiss={() => setPostMenuVisible(!postMenuvisible)}\n\tanchor={\n\t\t<FontAwesome5\n\t\tname=\"ellipsis-h\"\n\t\tsize={20}\n\t\tcolor={TABBARCOLOR}\n\t\tonPress={openPostMenu}\n\t/>\n\t}\n\t>\n<Menu.Item\nonPress={() => {\n  closePostMenu()\n  setTimeout(() => {\n    navigation.navigate('Report', { data: { type: 'post', id } })\n  }, 50)\n}}\ntitle={<Text style={{ color: 'black', fontSize: 18 }}>Report User</Text>}\n/>\n<Divider/>\n<Menu.Item\nonPress={() =>\n  blockUserAction()\n    .then(() => {\n      closePostMenu()\n      setTimeout(() => {\n        navigation.goBack()\n      }, 50)\n    })\n}\ntitle={<Text style={{ color: 'black', fontSize: 18 }}>Block User</Text>}\n/>\n</Menu>\n\n  const renderItem = ({ item }: {item: Comment}) => {\n    return <CommentCell comment={item}/>\n  }\n  // <View style={{flexDirection:'row', justifyContent: 'flex-end', flex:1, alignItems:'center', marginHorizontal: 20}}>\n  //     <List.Item\n  //         title={item.content}\n  //         description={() => {\n  //             return <View>\n  //                 <Paragraph>{item.username}</Paragraph>\n  //             </View>\n  //         }}\n  //         style={{width: '100%'}}\n  //     />\n  //     {commentMenu}\n  // </View>\n\n  const postCommentAction = () => {\n    postComment({ token: credentials!, content: text, postId: id.toString() })\n  }\n\n  return (\n<KeyboardAvoidingView behavior='padding' style={{ flex: 1 }}>\n<SafeAreaView style={{ flex: 1 }}>\n<View style={styles.container}>\n<Card style={styles.cardContainer}>\n<Card.Content style={styles.cardContent}>\n<Title style={styles.cardTitle}>{ title }</Title>\n<View style={styles.cardBody}>\n<Paragraph numberOfLines={3} style={styles.postText}>{content}</Paragraph>\n<Vote\nvotes={votes}\npostId={id}\n/>\n</View>\n</Card.Content>\n</Card>\n<View style={styles.metadataContainer}>\n<View style={{ flexDirection: 'row' }}>\n<Paragraph style={{ color: 'black' }}>{username} - </Paragraph>\n<Paragraph style={{ color: 'black' }}>{prettyCurrentDatePlusYears(dateCreated)}</Paragraph>\n</View>\n<View style={styles.metadataRight}>\n<MaterialCommunityIcons name=\"comment-text-outline\" size={20} color=\"black\"/>\n<Paragraph style={{ color: 'black', marginHorizontal: 10 }}>\n{comments\n  ? comments.length\n  : 0\n}\n</Paragraph>\n{postMenu}\n</View>\n</View>\n<Divider style={{ marginVertical: 10 }}/>\n<FlatList data={comments} renderItem={renderItem} keyExtractor={(item) => item.id} />\n<View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', backgroundColor: LIGHTBLUE }}>\n<TextInput\nplaceholder='Enter comment here...'\nvalue={text}\nonChangeText={comment => setText(comment)}\ntextAlign={'left'}\nstyle={styles.textInput}\nmultiline={true}\n/>\n<FontAwesome\nname=\"paper-plane\"\nsize={24}\ncolor={TABBARCOLOR}\nstyle={styles.planeIcon}\nonPress={() => postCommentAction()}\n/>\n</View>\n</View>\n</SafeAreaView>\n</KeyboardAvoidingView>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}