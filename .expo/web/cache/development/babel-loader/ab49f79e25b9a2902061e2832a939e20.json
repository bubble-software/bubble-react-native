{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/ForgotPassword/ForgotPassword.tsx\";\n\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Paragraph, TextInput, Title } from 'react-native-paper';\nimport { passwordReset } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { styles } from \"./styles\";\nexport var ForgotPassword = function ForgotPassword() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var resetPasswordAction = function resetPasswordAction() {\n    passwordReset(email).then(function () {\n      return navigation.navigate('Password Validation', {\n        data: email\n      });\n    }).catch(function (e) {\n      Alert.alert('Unable To Sign In.', 'Your username or password are incorrect.', [{\n        text: 'OK'\n      }]);\n    });\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginHorizontal: '8%',\n      marginTop: '24%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"We'll send you a code that confirms the account is yours.\"), React.createElement(TextInput, {\n    placeholder: \"email\",\n    onChangeText: function onChangeText(usernameText) {\n      return setEmail(usernameText);\n    },\n    value: email,\n    style: styles.textInput,\n    autoCapitalize: \"none\",\n    underlineColor: \"transparent\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"account\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.continueButton,\n    onPress: function onPress() {\n      return resetPasswordAction();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Paragraph, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, \"Continue\"))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/ForgotPassword/ForgotPassword.tsx"],"names":["useNavigation","React","useState","Button","Paragraph","TextInput","Title","passwordReset","ScreenContainer","styles","ForgotPassword","email","setEmail","navigation","resetPasswordAction","then","navigate","data","catch","e","Alert","alert","text","flex","marginHorizontal","marginTop","usernameText","textInput","continueButton","buttonText"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,KAAvC,QAAoD,oBAApD;AACA,SAASC,aAAT;AACA,SAASC,eAAT;AACA,SAASC,MAAT;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAmB;AAC/C,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,UAAU,GAAGb,aAAa,EAAhC;;AAEA,MAAMc,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCP,IAAAA,aAAa,CAACI,KAAD,CAAb,CACGI,IADH,CACQ;AAAA,aAAMF,UAAU,CAACG,QAAX,CAAoB,qBAApB,EAA2C;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAA3C,CAAN;AAAA,KADR,EAEGO,KAFH,CAES,UAACC,CAAD,EAAO;AACZC,MAAAA,KAAK,CAACC,KAAN,CACE,oBADF,EAEE,0CAFF,EAGE,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,CAHF;AAOD,KAVH;AAWD,GAZD;;AAaA,SACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,gBAAgB,EAAE,IAA7B;AAAmCC,MAAAA,SAAS,EAAE;AAA9C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADD,EAEC,oBAAC,SAAD;AACC,IAAA,WAAW,EAAC,OADb;AAEC,IAAA,YAAY,EAAE,sBAACC,YAAD;AAAA,aAAkBd,QAAQ,CAACc,YAAD,CAA1B;AAAA,KAFf;AAGC,IAAA,KAAK,EAAEf,KAHR;AAIC,IAAA,KAAK,EAAEF,MAAM,CAACkB,SAJf;AAKC,IAAA,cAAc,EAAC,MALhB;AAMC,IAAA,cAAc,EAAC,aANhB;AAOC,IAAA,IAAI,EAAC,UAPN;AAQC,IAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,IAAI,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAYC,oBAAC,MAAD;AACC,IAAA,IAAI,EAAC,WADN;AAEC,IAAA,KAAK,EAAElB,MAAM,CAACmB,cAFf;AAGC,IAAA,OAAO,EAAE;AAAA,aAAMd,mBAAmB,EAAzB;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,MAAM,CAACoB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,CAZD,CADD,CADA;AAwBD,CAzCM","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useState } from 'react'\nimport { Alert, View } from 'react-native'\nimport { Button, Paragraph, TextInput, Title } from 'react-native-paper'\nimport { passwordReset } from '../../api/service'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { styles } from './styles'\n\nexport const ForgotPassword = (): JSX.Element => {\n  const [email, setEmail] = useState('')\n  const navigation = useNavigation()\n\n  const resetPasswordAction = () => {\n    passwordReset(email)\n      .then(() => navigation.navigate('Password Validation', { data: email }))\n      .catch((e) => {\n        Alert.alert(\n          'Unable To Sign In.',\n          'Your username or password are incorrect.',\n          [\n            { text: 'OK' },\n          ],\n        )\n      })\n  }\n  return (\n\t\t<ScreenContainer>\n\t\t\t<View style={{ flex: 1, marginHorizontal: '8%', marginTop: '24%' }}>\n\t\t\t\t<Title>We&apos;ll send you a code that confirms the account is yours.</Title>\n\t\t\t\t<TextInput\n\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\tonChangeText={(usernameText) => setEmail(usernameText)}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t\tunderlineColor='transparent'\n\t\t\t\t\tmode=\"outlined\"\n\t\t\t\t\tleft={<TextInput.Icon name='account'/>}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tmode=\"contained\"\n\t\t\t\t\tstyle={styles.continueButton}\n\t\t\t\t\tonPress={() => resetPasswordAction()}\n\t\t\t\t>\n\t\t\t\t\t<Paragraph style={styles.buttonText}>Continue</Paragraph>\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}