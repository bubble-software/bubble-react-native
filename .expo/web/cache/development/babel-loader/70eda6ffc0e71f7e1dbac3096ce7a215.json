{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/bubble-react-native/src/screens/Liked/Liked.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { getUserLikedPosts } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { TableCell } from \"../../components/TableCell/TableCell\";\nimport { TableView } from \"../../components/TableView/TableView\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nexport var Liked = function Liked() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      likedPosts = _useState2[0],\n      setLikedPosts = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getUserLikedPosts(credentials).then(function (likedPostsData) {\n                return setLikedPosts(likedPostsData);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var route = function route(item) {\n    return navigation.navigate(\"Post\", {\n      data: item\n    });\n  };\n\n  var postTableCell = function postTableCell(_ref) {\n    var item = _ref.item;\n    return React.createElement(TableCell, {\n      item: item,\n      nav: route,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }\n    });\n  };\n\n  var placeholder = [{\n    id: 1,\n    title: \"HHHHH\",\n    username: \"HHHHH\",\n    votes: 2,\n    content: \"opisdjjiojop\"\n  }];\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(TableView, {\n    data: likedPosts,\n    tableCellRenderer: postTableCell,\n    scrollEnabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/Liked/Liked.tsx"],"names":["useNavigation","React","useEffect","useState","useContext","getUserLikedPosts","ScreenContainer","TableCell","TableView","AuthContext","Liked","likedPosts","setLikedPosts","navigation","credentials","then","likedPostsData","route","item","navigate","data","postTableCell","placeholder","id","title","username","votes","content"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,OAA3B;AAGA,SAASC,iBAAT;AACA,SAASC,eAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEzB,kBAAoCP,QAAQ,EAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,UAAU,GAAGb,aAAa,EAAhC;;AACA,oBAAsBI,UAAU,CAACK,WAAD,CAAhC;AAAA,MAAOK,WAAP,eAAOA,WAAP;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AACCG,cAAAA,iBAAiB,CAACS,WAAD,CAAjB,CAAgCC,IAAhC,CAAqC,UAACC,cAAD;AAAA,uBAAoBJ,aAAa,CAACI,cAAD,CAAjC;AAAA,eAArC;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,WAAeL,UAAU,CAACM,QAAX,CAAoB,MAApB,EAA4B;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KAA5B,CAAf;AAAA,GAAd;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGH,IAAH,QAAGA,IAAH;AAAA,WAAmB,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAuB,MAAA,GAAG,EAAGD,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAAA,GAAtB;;AAEA,MAAMK,WAAW,GAAC,CAChB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,KAAK,EAAE,CAJT;AAKEC,IAAAA,OAAO,EAAC;AALV,GADgB,CAAlB;AAUA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEhB,UADR;AAEE,IAAA,iBAAiB,EAAEU,aAFrB;AAGE,IAAA,aAAa,EAAE,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAnCM","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useEffect, useState } from 'react'\nimport { useContext } from 'react'\nimport { View } from 'react-native'\nimport { Title } from 'react-native-paper'\nimport { getUserLikedPosts } from '../../api/service'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { TableCell } from '../../components/TableCell/TableCell'\nimport { TableView } from '../../components/TableView/TableView'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport { getLikes } from './service'\n\nexport const Liked = () => {\n\n  const [likedPosts, setLikedPosts] = useState();\n\n  const navigation = useNavigation()\n  const {credentials} = useContext(AuthContext)  \n\n  useEffect(() => {\n    (async () => {\n      getUserLikedPosts(credentials!).then((likedPostsData) => setLikedPosts(likedPostsData))\n    })();\n  }, []); \n\n  const route = (item: any) => navigation.navigate(\"Post\", { data: item })\n  const postTableCell = ({ item }: any) => <TableCell item={item} nav={ route } />\n\n  const placeholder=[\n    {\n      id: 1,\n      title: \"HHHHH\",\n      username: \"HHHHH\",\n      votes: 2,\n      content:\"opisdjjiojop\",\n      \n    }\n  ]\n  return (\n    <ScreenContainer>\n      <TableView \n        data={likedPosts} \n        tableCellRenderer={postTableCell}\n        scrollEnabled={false}\n      />\n</ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}