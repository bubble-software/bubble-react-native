{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/auth/IsAuthenticated.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Login } from \"../screens/Login/Login\";\nimport { RegistrationStack } from \"../stacks/RegistrationStack/RegistrationStack\";\nimport { ForgotPasswordStack } from \"../stacks/ForgotPasswordStack/ForgotPasswordStack\";\nimport { AuthenticatedStack } from \"../stacks/AuthenticatedStack/AuthenticatedStack\";\nimport { keysToCamel } from \"../utils/stringhelpers\";\nimport jwtDecode from 'jwt-decode';\nimport { UserContext } from \"../providers/UserProvider/UserProvider\";\nexport var IsAuthenticated = function IsAuthenticated(_ref) {\n  var credentials = _ref.credentials;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      me = _useState2[0],\n      setMe = _useState2[1];\n\n  useEffect(function () {\n    if (credentials) {\n      var userDecoded = jwtDecode(credentials);\n      setMe(keysToCamel(userDecoded));\n    }\n  }, [credentials]);\n  var userContext = React.useMemo(function () {\n    return {\n      me: me,\n      setMe: setMe\n    };\n  }, [me]);\n  var RootStack = createStackNavigator();\n  return React.createElement(UserContext.Provider, {\n    value: userContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, React.createElement(RootStack.Navigator, {\n    mode: \"modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, credentials ? React.createElement(RootStack.Screen, {\n    name: \"Authenticated\",\n    component: AuthenticatedStack,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(RootStack.Screen, {\n    name: \"Login\",\n    component: Login,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"Forgot Password Stack\",\n    component: ForgotPasswordStack,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"Registration\",\n    component: RegistrationStack,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/auth/IsAuthenticated.tsx"],"names":["React","useEffect","useState","createStackNavigator","Login","RegistrationStack","ForgotPasswordStack","AuthenticatedStack","keysToCamel","jwtDecode","UserContext","IsAuthenticated","credentials","me","setMe","userDecoded","userContext","useMemo","RootStack","headerShown"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,SAASC,KAAT;AACA,SAASC,iBAAT;AACA,SAASC,mBAAT;AACA,SAASC,kBAAT;AACA,SAASC,WAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,eAA6B,GAAG,SAAhCA,eAAgC,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAChE,kBAAoBV,QAAQ,CAAc,IAAd,CAA5B;AAAA;AAAA,MAAOW,EAAP;AAAA,MAAWC,KAAX;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,WAAJ,EAAiB;AACf,UAAMG,WAAW,GAAGN,SAAS,CAACG,WAAD,CAA7B;AACAE,MAAAA,KAAK,CAACN,WAAW,CAACO,WAAD,CAAZ,CAAL;AACD;AACF,GALQ,EAKN,CAACH,WAAD,CALM,CAAT;AAOA,MAAMI,WAAW,GAAGhB,KAAK,CAACiB,OAAN,CAAc,YAAM;AACtC,WAAO;AACLJ,MAAAA,EAAE,EAAFA,EADK;AAELC,MAAAA,KAAK,EAALA;AAFK,KAAP;AAID,GALmB,EAKjB,CAACD,EAAD,CALiB,CAApB;AAOA,MAAMK,SAAS,GAAGf,oBAAoB,EAAtC;AACA,SACA,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEa,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,GACT,oBAAC,SAAD,CAAW,MAAX;AACF,IAAA,IAAI,EAAC,eADH;AAEF,IAAA,SAAS,EAAEL,kBAFT;AAGF,IAAA,OAAO,EAAE;AAAEY,MAAAA,WAAW,EAAE;AAAf,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAMT,0CACF,oBAAC,SAAD,CAAW,MAAX;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,SAAS,EAAEf,KAFZ;AAGC,IAAA,OAAO,EAAE;AAAEe,MAAAA,WAAW,EAAE;AAAf,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,EAMF,oBAAC,SAAD,CAAW,MAAX;AACC,IAAA,IAAI,EAAC,uBADN;AAEC,IAAA,SAAS,EAAEb,mBAFZ;AAGC,IAAA,OAAO,EAAE;AAAEa,MAAAA,WAAW,EAAE;AAAf,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANE,EAWF,oBAAC,SAAD,CAAW,MAAX;AACC,IAAA,IAAI,EAAC,cADN;AAEC,IAAA,SAAS,EAAEd,iBAFZ;AAGC,IAAA,OAAO,EAAE;AAAEc,MAAAA,WAAW,EAAE;AAAf,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXE,CAPL,CADD,CADA;AA+BD,CAjDM","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { TemplateType, User } from './types'\nimport { Login } from '../screens/Login/Login'\nimport { RegistrationStack } from '../stacks/RegistrationStack/RegistrationStack'\nimport { ForgotPasswordStack } from '../stacks/ForgotPasswordStack/ForgotPasswordStack'\nimport { AuthenticatedStack } from '../stacks/AuthenticatedStack/AuthenticatedStack'\nimport { keysToCamel } from '../utils/stringhelpers'\nimport jwtDecode from 'jwt-decode'\nimport { UserContext } from '../providers/UserProvider/UserProvider'\n\nexport const IsAuthenticated: TemplateType = ({ credentials }) => {\n  const [me, setMe] = useState<User | null>(null)\n\n  useEffect(() => {\n    if (credentials) {\n      const userDecoded = jwtDecode(credentials)\n      setMe(keysToCamel(userDecoded) as User)\n    }\n  }, [credentials])\n\n  const userContext = React.useMemo(() => {\n    return {\n      me,\n      setMe,\n    }\n  }, [me])\n\n  const RootStack = createStackNavigator()\n  return (\n\t\t<UserContext.Provider value={userContext}>\n\t\t\t<RootStack.Navigator mode='modal'>\n\t\t\t\t{ credentials\n\t\t\t\t  ? <RootStack.Screen\n\t\t\t\t\t\tname=\"Authenticated\"\n\t\t\t\t\t\tcomponent={AuthenticatedStack}\n\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t/>\n\t\t\t\t  : <>\n\t\t\t\t\t\t<RootStack.Screen\n\t\t\t\t\t\t\tname=\"Login\"\n\t\t\t\t\t\t\tcomponent={Login}\n\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RootStack.Screen\n\t\t\t\t\t\t\tname=\"Forgot Password Stack\"\n\t\t\t\t\t\t\tcomponent={ForgotPasswordStack}\n\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RootStack.Screen\n\t\t\t\t\t\t\tname=\"Registration\"\n\t\t\t\t\t\t\tcomponent={RegistrationStack}\n\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\n\t\t\t</RootStack.Navigator>\n\t\t</UserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}