{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/AccountSettings/components/PasswordModal/PasswordModal.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { List, Button, Paragraph } from 'react-native-paper';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Modal } from \"../../../../components/Modal/Modal\";\nimport { DARKBLUE, LIGHTERBLUE } from \"../../../../utils/constants\";\nimport { updateUser } from \"../../../../api/service\";\nexport var PasswordModal = function PasswordModal(_ref) {\n  var credentials = _ref.credentials,\n      visible = _ref.visible,\n      onDismiss = _ref.onDismiss,\n      placeholderText = _ref.placeholderText;\n\n  var _useState = useState(placeholderText || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(placeholderText || ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPassword = _useState4[0],\n      setNewPassword = _useState4[1];\n\n  var _useState5 = useState(placeholderText || ''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var submitAccountEdit = function submitAccountEdit() {\n    return _regeneratorRuntime.async(function submitAccountEdit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(updateUser(credentials, {\n              setting: 'password',\n              value: password\n            }).then(function () {\n              Alert.alert('Username has been updated');\n            }).catch(function (e) {\n              Alert.alert('Username already taken');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var EmailFields = [{\n    id: 0,\n    component: React.createElement(TextInput, {\n      placeholder: 'Old Password',\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      style: {\n        marginTop: '8%',\n        marginHorizontal: 20,\n        borderRadius: 5,\n        borderWidth: 3,\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        borderColor: DARKBLUE,\n        backgroundColor: LIGHTERBLUE\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    })\n  }, {\n    id: 1,\n    component: React.createElement(TextInput, {\n      placeholder: 'New Password',\n      value: newPassword,\n      onChangeText: function onChangeText(text) {\n        return setNewPassword(text);\n      },\n      style: {\n        marginTop: '8%',\n        marginHorizontal: 20,\n        borderRadius: 5,\n        borderWidth: 3,\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        borderColor: DARKBLUE,\n        backgroundColor: LIGHTERBLUE\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })\n  }, {\n    id: 1,\n    component: React.createElement(TextInput, {\n      placeholder: 'Confirm New Password',\n      value: confirmPassword,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      },\n      style: {\n        marginTop: '8%',\n        marginHorizontal: 20,\n        borderRadius: 5,\n        borderWidth: 3,\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        borderColor: DARKBLUE,\n        backgroundColor: LIGHTERBLUE\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    })\n  }, {\n    id: 2,\n    component: React.createElement(Button, {\n      style: {\n        marginVertical: '8%',\n        width: '60%',\n        alignSelf: 'center',\n        backgroundColor: DARKBLUE\n      },\n      mode: \"contained\",\n      onPress: function onPress() {\n        submitAccountEdit().then(function () {\n          return onDismiss();\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }\n    }, React.createElement(Paragraph, {\n      style: {\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Submit\"))\n  }];\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return item.component;\n  };\n\n  return React.createElement(Modal, {\n    visible: visible,\n    onDismiss: onDismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 1\n    }\n  }, React.createElement(FlatList, {\n    renderItem: renderItem,\n    scrollEnabled: false,\n    data: EmailFields,\n    style: {\n      borderRadius: 15,\n      backgroundColor: '#e9e9e9',\n      width: '90%',\n      alignSelf: 'center'\n    },\n    ListHeaderComponent: React.createElement(List.Item, {\n      style: {\n        alignSelf: 'stretch',\n        backgroundColor: DARKBLUE,\n        width: '100%'\n      },\n      titleStyle: {\n        fontWeight: '800'\n      },\n      title: 'Change your password',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 22\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 1\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/AccountSettings/components/PasswordModal/PasswordModal.tsx"],"names":["React","useState","List","Button","Paragraph","Modal","DARKBLUE","LIGHTERBLUE","updateUser","PasswordModal","credentials","visible","onDismiss","placeholderText","password","setPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","submitAccountEdit","setting","value","then","Alert","alert","catch","e","EmailFields","id","component","text","marginTop","marginHorizontal","borderRadius","borderWidth","paddingHorizontal","paddingVertical","borderColor","backgroundColor","marginVertical","width","alignSelf","color","renderItem","item","fontWeight"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,oBAAxC;;;;AAEA,SAASC,KAAT;AACA,SAASC,QAAT,EAAmBC,WAAnB;AACA,SAASC,UAAT;AAGA,OAAO,IAAMC,aAA2B,GAAG,SAA9BA,aAA8B,OAA0D;AAAA,MAAvDC,WAAuD,QAAvDA,WAAuD;AAAA,MAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;;AACnG,kBAAgCZ,QAAQ,CAACY,eAAe,IAAI,EAApB,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAsCd,QAAQ,CAACY,eAAe,IAAI,EAApB,CAA9C;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA8ChB,QAAQ,CAACY,eAAe,IAAI,EAApB,CAAtD;AAAA;AAAA,MAAOK,eAAP;AAAA,MAAwBC,kBAAxB;;AAUA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAClBZ,UAAU,CAACE,WAAD,EAAc;AAAEW,cAAAA,OAAO,EAAE,UAAX;AAAuBC,cAAAA,KAAK,EAAER;AAA9B,aAAd,CAAV,CACHS,IADG,CACE,YAAM;AACVC,cAAAA,KAAK,CAACC,KAAN,CACE,2BADF;AAGD,aALG,EAMHC,KANG,CAMG,UAACC,CAAD,EAAO;AACZH,cAAAA,KAAK,CAACC,KAAN,CACE,wBADF;AAGD,aAVG,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAcA,MAAMG,WAAW,GAAG,CAClB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EACP,oBAAC,SAAD;AACA,MAAA,WAAW,EAAE,cADb;AAEA,MAAA,KAAK,EAAEhB,QAFP;AAGA,MAAA,YAAY,EAAE,sBAAAiB,IAAI;AAAA,eAAIhB,WAAW,CAACgB,IAAD,CAAf;AAAA,OAHlB;AAIA,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,gBAAgB,EAAE,EAFb;AAGLC,QAAAA,YAAY,EAAE,CAHT;AAILC,QAAAA,WAAW,EAAE,CAJR;AAKLC,QAAAA,iBAAiB,EAAE,EALd;AAMLC,QAAAA,eAAe,EAAE,EANZ;AAOLC,QAAAA,WAAW,EAAEhC,QAPR;AAQLiC,QAAAA,eAAe,EAAEhC;AARZ,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,GADkB,EAoBlB;AACEsB,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EACP,oBAAC,SAAD;AACA,MAAA,WAAW,EAAE,cADb;AAEA,MAAA,KAAK,EAAEd,WAFP;AAGA,MAAA,YAAY,EAAE,sBAAAe,IAAI;AAAA,eAAId,cAAc,CAACc,IAAD,CAAlB;AAAA,OAHlB;AAIA,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,gBAAgB,EAAE,EAFb;AAGLC,QAAAA,YAAY,EAAE,CAHT;AAILC,QAAAA,WAAW,EAAE,CAJR;AAKLC,QAAAA,iBAAiB,EAAE,EALd;AAMLC,QAAAA,eAAe,EAAE,EANZ;AAOLC,QAAAA,WAAW,EAAEhC,QAPR;AAQLiC,QAAAA,eAAe,EAAEhC;AARZ,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,GApBkB,EAuClB;AACEsB,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EACP,oBAAC,SAAD;AACA,MAAA,WAAW,EAAE,sBADb;AAEA,MAAA,KAAK,EAAEZ,eAFP;AAGA,MAAA,YAAY,EAAE,sBAAAa,IAAI;AAAA,eAAIZ,kBAAkB,CAACY,IAAD,CAAtB;AAAA,OAHlB;AAIA,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,gBAAgB,EAAE,EAFb;AAGLC,QAAAA,YAAY,EAAE,CAHT;AAILC,QAAAA,WAAW,EAAE,CAJR;AAKLC,QAAAA,iBAAiB,EAAE,EALd;AAMLC,QAAAA,eAAe,EAAE,EANZ;AAOLC,QAAAA,WAAW,EAAEhC,QAPR;AAQLiC,QAAAA,eAAe,EAAEhC;AARZ,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,GAvCkB,EA0DlB;AACEsB,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,oBAAC,MAAD;AACT,MAAA,KAAK,EAAE;AACLU,QAAAA,cAAc,EAAE,IADX;AAELC,QAAAA,KAAK,EAAE,KAFF;AAGLC,QAAAA,SAAS,EAAE,QAHN;AAILH,QAAAA,eAAe,EAAEjC;AAJZ,OADE;AAOT,MAAA,IAAI,EAAE,WAPG;AAQT,MAAA,OAAO,EAAE,mBAAM;AACbc,QAAAA,iBAAiB,GAAGG,IAApB,CAAyB;AAAA,iBAAMX,SAAS,EAAf;AAAA,SAAzB;AACD,OAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYT,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAE+B,QAAAA,KAAK,EAAE;AAAT,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZS;AAFb,GA1DkB,CAApB;;AA6EA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAI,CAACf,SAAnB;AAAA,GAAnB;;AAqCA,SACF,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEnB,OAAhB;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AACA,IAAA,UAAU,EAAEgC,UADZ;AAEA,IAAA,aAAa,EAAE,KAFf;AAGA,IAAA,IAAI,EAAEhB,WAHN;AAIA,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAY,EAAE,EAAhB;AAAoBK,MAAAA,eAAe,EAAE,SAArC;AAAgDE,MAAAA,KAAK,EAAE,KAAvD;AAA8DC,MAAAA,SAAS,EAAE;AAAzE,KAJP;AAKA,IAAA,mBAAmB,EAAE,oBAAC,IAAD,CAAM,IAAN;AACrB,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE,SAAb;AAAwBH,QAAAA,eAAe,EAAEjC,QAAzC;AAAmDmC,QAAAA,KAAK,EAAE;AAA1D,OADc;AAErB,MAAA,UAAU,EAAE;AAAEK,QAAAA,UAAU,EAAE;AAAd,OAFS;AAGrB,MAAA,KAAK,EAAE,sBAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADE;AAeD,CA5JM","sourcesContent":["import React, { useState } from 'react'\nimport { List, Button, Paragraph } from 'react-native-paper'\nimport { Alert, FlatList, TextInput } from 'react-native'\nimport { Modal } from '../../../../components/Modal/Modal'\nimport { DARKBLUE, LIGHTERBLUE } from '../../../../utils/constants'\nimport { updateUser } from '../../../../api/service'\nimport { TemplateType } from '../UsernameModal/types'\n\nexport const PasswordModal: TemplateType = ({ credentials, visible, onDismiss, placeholderText }) => {\n  const [password, setPassword] = useState(placeholderText || '')\n  const [newPassword, setNewPassword] = useState(placeholderText || '')\n  const [confirmPassword, setConfirmPassword] = useState(placeholderText || '')\n\n  // useEffect(() => {\n  //   if (emailIsValid(email)) {\n  //     setIsDisabled(false)\n  //   } else {\n  //     setIsDisabled(true)\n  //   }\n  // }, [email])\n\n  const submitAccountEdit = async () => {\n    await updateUser(credentials, { setting: 'password', value: password })\n      .then(() => {\n        Alert.alert(\n          'Username has been updated',\n        )\n      })\n      .catch((e) => {\n        Alert.alert(\n          'Username already taken',\n        )\n      })\n  }\n\n  const EmailFields = [\n    {\n      id: 0,\n      component:\n        <TextInput\n        placeholder={'Old Password'}\n        value={password}\n        onChangeText={text => setPassword(text)}\n        style={{\n          marginTop: '8%',\n          marginHorizontal: 20,\n          borderRadius: 5,\n          borderWidth: 3,\n          paddingHorizontal: 10,\n          paddingVertical: 10,\n          borderColor: DARKBLUE,\n          backgroundColor: LIGHTERBLUE,\n        }}\n        />,\n    },\n    {\n      id: 1,\n      component:\n        <TextInput\n        placeholder={'New Password'}\n        value={newPassword}\n        onChangeText={text => setNewPassword(text)}\n        style={{\n          marginTop: '8%',\n          marginHorizontal: 20,\n          borderRadius: 5,\n          borderWidth: 3,\n          paddingHorizontal: 10,\n          paddingVertical: 10,\n          borderColor: DARKBLUE,\n          backgroundColor: LIGHTERBLUE,\n        }}\n        />,\n    },\n    {\n      id: 1,\n      component:\n        <TextInput\n        placeholder={'Confirm New Password'}\n        value={confirmPassword}\n        onChangeText={text => setConfirmPassword(text)}\n        style={{\n          marginTop: '8%',\n          marginHorizontal: 20,\n          borderRadius: 5,\n          borderWidth: 3,\n          paddingHorizontal: 10,\n          paddingVertical: 10,\n          borderColor: DARKBLUE,\n          backgroundColor: LIGHTERBLUE,\n        }}\n        />,\n    },\n    {\n      id: 2,\n      component: <Button\n        style={{\n          marginVertical: '8%',\n          width: '60%',\n          alignSelf: 'center',\n          backgroundColor: DARKBLUE,\n        }}\n        mode ='contained'\n        onPress={() => {\n          submitAccountEdit().then(() => onDismiss())\n        }}\n      >\n        <Paragraph style={{ color: 'white' }}>Submit</Paragraph>\n      </Button>,\n    },\n  ]\n\n  const renderItem = ({ item }) => item.component\n  // const submitAccountEdit = () => {\n  //   const accountInfo: EditableAccountFieldsType = {\n  //     attribute: 'email',\n  //     firstName,\n  //     lastName,\n  //     email,\n  //     referralCode: ozoneReferralCode,\n  //   }\n  //   Alert.alert(\n  //     'Updating your email address will log you out. Continue?',\n  //     '',\n  //     [\n  //       {\n  //         text: 'Cancel',\n  //         onPress: () => {},\n  //         style: 'cancel',\n  //       },\n  //       {\n  //         text: 'OK',\n  //         onPress: () => {\n  //           editAccountInfo(accountInfo, credentials!)\n  //             .then(() => {\n  //               Alert.alert('Success', 'Email successfully changed.')\n  //               signOut().then(() => setMe(null))\n  //             })\n  //             .catch((e) => {\n  //               Alert.alert(\n  //                 'Email Address already taken',\n  //               )\n  //             })\n  //         },\n  //       },\n  //     ],\n  //   )\n  // }\n\n  return (\n<Modal visible={visible} onDismiss={onDismiss}>\n<FlatList\nrenderItem={renderItem}\nscrollEnabled={false}\ndata={EmailFields}\nstyle={{ borderRadius: 15, backgroundColor: '#e9e9e9', width: '90%', alignSelf: 'center' }}\nListHeaderComponent={<List.Item\nstyle={{ alignSelf: 'stretch', backgroundColor: DARKBLUE, width: '100%' }}\ntitleStyle={{ fontWeight: '800' }}\ntitle={'Change your password'}\n/>}\n/>\n</Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}