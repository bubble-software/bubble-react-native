{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var clearStorage = function clearStorage() {\n  return _regeneratorRuntime.async(function clearStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          AsyncStorage.clear().then(function () {\n            return setAsyncStorageItem('hasSeenOnboarding', JSON.stringify(true));\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var setAsyncStorageItem = function setAsyncStorageItem(key, value) {\n  return _regeneratorRuntime.async(function setAsyncStorageItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getAsyncStorageItem = function getAsyncStorageItem(value) {\n  return _regeneratorRuntime.async(function getAsyncStorageItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(value));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/utils/asyncStorage.ts"],"names":["AsyncStorage","clearStorage","clear","then","setAsyncStorageItem","JSON","stringify","key","value","setItem","getAsyncStorageItem","getItem"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAC1BD,UAAAA,YAAY,CAACE,KAAb,GAAqBC,IAArB,CAA0B;AAAA,mBAAMC,mBAAmB,CAAC,mBAAD,EAAsBC,IAAI,CAACC,SAAL,CAAe,IAAf,CAAtB,CAAzB;AAAA,WAA1B;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAIP,OAAO,IAAMF,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOG,GAAP,EAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC3BR,YAAY,CAACS,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAIP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOF,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACpBR,YAAY,CAACW,OAAb,CAAqBH,KAArB,CADoB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage'\n\nexport const clearStorage = async (): Promise<void> => {\n  AsyncStorage.clear().then(() => setAsyncStorageItem('hasSeenOnboarding', JSON.stringify(true)))\n}\n\nexport const setAsyncStorageItem = async (key: string, value: string): Promise<void> => {\n  await AsyncStorage.setItem(key, value)\n}\n\nexport const getAsyncStorageItem = async (value: string):Promise<string | null> => {\n  return await AsyncStorage.getItem(value)\n}\n"]},"metadata":{},"sourceType":"module"}