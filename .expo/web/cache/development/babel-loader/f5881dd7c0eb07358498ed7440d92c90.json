{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/Report/Report.tsx\";\n\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Title } from 'react-native-paper';\nimport { submitContentReview } from \"../../api/service\";\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport { DARKBLUE } from \"../../utils/constants\";\nimport Cog from \"../../../assets/icons/feedbackCog.svg\";\nimport { styles } from \"../Feedback/styles\";\nexport var Report = function Report(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      credentials = _useContext.credentials;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      feedback = _useState2[0],\n      setFeedback = _useState2[1];\n\n  var routeData = route.params.data;\n  var id = routeData.id,\n      type = routeData.type;\n\n  var postFeedback = function postFeedback() {\n    if (feedback.length !== 0) {\n      submitContentReview(credentials, {\n        postId: type === 'post' ? id.toString() : undefined,\n        commentId: type === 'comment' ? id.toString() : undefined,\n        content: feedback,\n        contentType: type\n      });\n    }\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Cog, {\n    width: 40,\n    height: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      fontSize: 36,\n      color: 'white',\n      fontWeight: '600',\n      marginHorizontal: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }, \"Report\"), React.createElement(Cog, {\n    width: 40,\n    height: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  })), React.createElement(TextInput, {\n    placeholder: \"Enter report here...\",\n    value: feedback,\n    onChangeText: function onChangeText(text) {\n      return setFeedback(text);\n    },\n    textAlign: 'left',\n    style: styles.textInput,\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    style: styles.button,\n    onPress: function onPress() {\n      return postFeedback();\n    },\n    mode: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    style: {\n      color: DARKBLUE\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, \"Submit\"))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/use this /bubble-react-native/src/screens/Report/Report.tsx"],"names":["React","useContext","useState","Button","Title","submitContentReview","ScreenContainer","AuthContext","DARKBLUE","Cog","styles","Report","route","credentials","feedback","setFeedback","routeData","params","data","id","type","postFeedback","length","postId","toString","undefined","commentId","content","contentType","alignItems","titleContainer","textAlign","fontSize","color","fontWeight","marginHorizontal","text","textInput","button"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\n\nimport { View, Text, TextInput } from 'react-native'\nimport { Button, Title } from 'react-native-paper'\nimport { submitContentReview } from '../../api/service'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport { DARKBLUE } from '../../utils/constants'\nimport Cog from '../../../assets/icons/feedbackCog.svg'\nimport { styles } from '../Feedback/styles'\nimport { ReportProps } from './types'\n\nexport const Report = ({ route }: {route: ReportProps}): JSX.Element => {\n  const { credentials } = useContext(AuthContext)\n  const [feedback, setFeedback] = useState('')\n  const { data: routeData } = route.params\n\n  const { id, type } = routeData\n\n  const postFeedback = () => {\n    if (feedback.length !== 0) {\n      submitContentReview(credentials!, {\n        postId: type === 'post' ? id.toString() : undefined,\n        commentId: type === 'comment' ? id.toString() : undefined,\n        content: feedback,\n        contentType: type,\n      })\n    }\n  }\n\n  return (\n\t\t<ScreenContainer>\n\t\t\t<View style={{ alignItems: 'center' }}>\n\t\t\t\t<View style={styles.titleContainer}>\n\t\t\t\t\t<Cog width={40} height={50}/>\n\t\t\t\t\t<Text style={{ textAlign: 'center', fontSize: 36, color: 'white', fontWeight: '600', marginHorizontal: 20 }}>Report</Text>\n\t\t\t\t\t<Cog width={40} height={50}/>\n\t\t\t\t</View>\n\t\t\t\t<TextInput\n\t\t\t\t\tplaceholder='Enter report here...'\n\t\t\t\t\tvalue={feedback}\n\t\t\t\t\tonChangeText={(text) => setFeedback(text)}\n\t\t\t\t\ttextAlign={'left'}\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tmultiline={true}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tonPress={() => postFeedback()} mode='contained'\n\t\t\t\t>\n\t\t\t\t\t<Title style={{ color: DARKBLUE }}>\n            Submit\n\t\t\t\t\t</Title>\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t</ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}