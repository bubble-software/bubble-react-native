{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mattdizon/Desktop/bubble-react-native/src/screens/Login/Login.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Text, Button, Paragraph } from 'react-native-paper';\nimport { ScreenContainer } from \"../../components/ScreenContainer/ScreenContainer\";\nimport { styles } from \"./styles\";\nimport { setAsyncStorageItem } from \"../../utils/asyncStorage\";\nimport { useContext } from 'react';\nimport { AuthContext } from \"../../providers/AuthProvider/AuthProvider\";\nimport { login } from \"./service\";\nimport BubbleText from \"../../../assets/icons/bubbleText.svg\";\nexport var Login = function Login() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      signIn = _useContext.signIn;\n\n  var onLoginPressed = function onLoginPressed() {\n    var credentials;\n    return _regeneratorRuntime.async(function onLoginPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(login({\n              username: username,\n              password: password\n            }).catch(function (e) {\n              Alert.alert('Unable To Sign In.', 'Your username or password are incorrect.', [{\n                text: 'OK'\n              }]);\n            }));\n\n          case 2:\n            credentials = _context.sent;\n\n            if (!credentials) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(setAsyncStorageItem('credentials', JSON.stringify(credentials)));\n\n          case 6:\n            signIn(credentials);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScreenContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginVertical: '25%',\n      marginHorizontal: '8%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(BubbleText, {\n    height: 100,\n    style: {\n      marginBottom: '20%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"username\",\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    },\n    value: username,\n    style: styles.emailTextInput,\n    autoCapitalize: \"none\",\n    underlineColor: \"transparent\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"account\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"password\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    value: password,\n    secureTextEntry: true,\n    style: styles.emailTextInput,\n    autoCapitalize: \"none\",\n    mode: \"outlined\",\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.loginButton,\n    onPress: function onPress() {\n      return onLoginPressed();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Paragraph, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Login\")), React.createElement(View, {\n    style: styles.footerTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Registration');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Register\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Forgot Password Stack\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Forgot Password\")))));\n};","map":{"version":3,"sources":["/Users/mattdizon/Desktop/bubble-react-native/src/screens/Login/Login.tsx"],"names":["useNavigation","React","useState","TextInput","Text","Button","Paragraph","ScreenContainer","styles","setAsyncStorageItem","useContext","AuthContext","login","BubbleText","Login","navigation","username","setUsername","password","setPassword","signIn","onLoginPressed","catch","e","Alert","alert","text","credentials","JSON","stringify","flex","marginVertical","marginHorizontal","marginBottom","emailTextInput","loginButton","loginText","footerTextContainer","navigate","footerText"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useState } from 'react'\nimport { Alert, TouchableOpacity, View } from 'react-native'\nimport { TextInput, Text, Button, Paragraph } from 'react-native-paper'\nimport { ScreenContainer } from '../../components/ScreenContainer/ScreenContainer'\nimport { styles } from './styles'\nimport { setAsyncStorageItem } from '../../utils/asyncStorage'\nimport { useContext } from 'react'\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider'\nimport { login } from './service'\nimport BubbleText from '../../../assets/icons/bubbleText.svg'\nexport const Login = () => {\n\n  const navigation = useNavigation()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  \n  const { signIn } = useContext(AuthContext)\n\n\n  const onLoginPressed = async () => {\n    const credentials = await login({\n      username,\n      password,\n    }).catch((e) => {\n      Alert.alert(\n        'Unable To Sign In.',\n        'Your username or password are incorrect.',\n        [\n          { text: 'OK' },\n        ],\n      )\n    })\n    if (credentials) {\n      await setAsyncStorageItem('credentials', JSON.stringify(credentials))\n      signIn(credentials)\n    }\n  }\n\n  return (\n    <ScreenContainer>\n      <View style={{ flex: 1, marginVertical: '25%', marginHorizontal: '8%'}}>\n          <BubbleText height={100} style={{ marginBottom: '20%'}}/>\n          <TextInput\n            placeholder=\"username\"\n            onChangeText={(username) => setUsername(username)}\n            value={username}\n            style={styles.emailTextInput}\n            autoCapitalize='none'\n            underlineColor='transparent'\n            mode=\"outlined\"\n            left={<TextInput.Icon name='account'/>}\n          />\n          <TextInput\n            placeholder=\"password\"\n            onChangeText={(password) => setPassword(password)}\n            value={password}\n            secureTextEntry={true}\n            style={styles.emailTextInput}\n            autoCapitalize='none'\n            mode=\"outlined\"\n            left={<TextInput.Icon name='lock-outline'/>}\n          />\n        <Button\n          mode=\"contained\"\n          style={styles.loginButton}\n          onPress={() => onLoginPressed()}\n        >\n          <Paragraph style={styles.loginText}>Login</Paragraph>\n        </Button>\n        <View style={styles.footerTextContainer}>\n          <TouchableOpacity onPress={() => navigation.navigate('Registration')}>\n            <Text style={styles.footerText}>Register</Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => navigation.navigate(\"Forgot Password Stack\")}>\n            <Text style={styles.footerText}>Forgot Password</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScreenContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}